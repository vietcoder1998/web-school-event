(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{118:function(e,t,a){"use strict";a.r(t);var n=a(4),l=a.n(n),s=a(19),i=a(39),r=a(61);a(90);class c extends n.Component{constructor(){super(),this.state={loading:!0,fade:!0}}componentDidMount(){setTimeout(()=>{this.setState({loading:!1,fade:!1})})}render(){let{loading:e,fade:t}=this.state;return(l.a.createElement("div",{className:"box-block",id:this.props.id},l.a.createElement("div",{className:"block-header"},l.a.createElement("p",null,this.props.icon," ",this.props.describe)),e?l.a.createElement("div",{className:"loading"},l.a.createElement(i.Icon,{type:"loading-3-quarters",style:{fontSize:24},spin:!0})):l.a.createElement("div",{className:"effect",style:{opacity:!0===t?"0":"1"}},this.props.children)))}}var o=c;var m=a(41),h=a.n(m),d=(a(91),a(6)),p=a(9),u=a(5),g=a(0);class E extends n.Component{constructor(e){var t,a,n;super(e),n=()=>{let{state:e}=this.state;e=!e,this.setState({state:e}),this.requestToSever(e)},(a="_handleStateButton")in(t=this)?Object.defineProperty(t,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[a]=n,this.state={state:!0}}componentDidMount(){let{state:e}=this.props;this.setState({state:e})}async requestToSever(e){await Object(d.a)(u.d,null,p.s+e,null,null),await this.props.getData()}render(){return l.a.createElement("div",{className:"toggle-button"},l.a.createElement("b",{style:{marginLeft:10}},l.a.createElement(i.Switch,{id:"find-job",onChange:this._handleStateButton,defaultChecked:this.props.state}),l.a.createElement("label",{htmlFor:"find-job"},!0===this.state.state?"Đang tìm việc":"Đã có việc")))}}var f=Object(s.connect)(e=>({state:e.FullPersonalInfo.personalInfo.isLookingForJob}),e=>({getData:()=>e({type:g.b.PERSON_INFO.GET_FULL_PERSON_INFO})}))(E),y=a(2),v=a(50),C=a.n(v),b=a(51),_=a.n(b),N=a(52),S=a.n(N);function x(){return(x=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}function I(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}class k extends l.a.Component{constructor(e){super(e),I(this,"SendData",(e,t,a)=>{this.props.GetLatLngToParent(e,t,a)}),I(this,"handleChange",e=>{this.setState({address:e})}),I(this,"handleSelect",e=>{Object(b.geocodeByAddress)(e).then(e=>Object(b.getLatLng)(e[0])).then(t=>{this.SendData(t.lat,t.lng,e),this.setState({address:e}),this.setState(e=>({position:{...e.position,lat:t.lat,lng:t.lng}}))}).catch(e=>console.error("Error",e))}),I(this,"getAddress",e=>{let{latLng:t}=e;const a=t.lat(),n=t.lng();this.setState(e=>({position:{...e.position,lat:a,lng:n}}));let{address:l}=this.state;(function(e,t){const a=window.google;var n=new a.maps.Geocoder;return new Promise((function(l,s){n.geocode({latLng:new a.maps.LatLng(e,t)},(function(e,t){"OK"===t?l(e):alert("Không có thông tin nơi bạn chọn!")}))}))})(a,n).then(e=>{l=e[0].formatted_address,this.setState({address:l}),this.SendData(t.lat(),t.lng(),l)})}),this.state={position:{lat:21.027763,lng:105.83416},address:"",showInfo:!1}}componentDidMount(){}render(){return l.a.createElement("div",{style:{position:"absolute",height:"80%",width:"100%",top:0,right:0}},l.a.createElement(_.a,{value:this.state.address,onChange:this.handleChange,onSelect:this.handleSelect},({getInputProps:e,suggestions:t,getSuggestionItemProps:a,loading:n})=>l.a.createElement("div",null,l.a.createElement(i.Dropdown,{overlay:l.a.createElement(i.Menu,{className:"autocomplete-dropdown-container "},n&&l.a.createElement("div",null,"Loading..."),t&&t.length>0?t.map((e,t)=>{const n=e.active?"suggestion-item--active":"suggestion-item";return(l.a.createElement(S.a,x({},a(e,{className:n}),{key:t,className:"Test",style:e.active?{backgroundColor:"#fafafa",cursor:"pointer"}:{backgroundColor:"#ffffff",cursor:"pointer"}}),l.a.createElement(i.Icon,{type:"environment",twoToneColor:"red",theme:"twoTone"})," ",l.a.createElement("span",null,e.description)))}):null)},l.a.createElement(i.Input,e({placeholder:"Gõ để tìm kiếm vị trí...",className:"location-search-input"}))))),l.a.createElement(C.a,{style:{width:"100%",height:"100%",marginTop:10},google:window.google,zoom:14,center:{lat:this.state.position.lat,lng:this.state.position.lng},initialCenter:{lat:this.state.position.lat,lng:this.state.position.lng}},l.a.createElement(v.Marker,{name:this.state.address,position:this.state.position,draggable:!0,onDragend:(e,t,a)=>this.getAddress(a)})))}}var w=k,D=a(63);function O(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}class L extends n.Component{constructor(e){super(e),O(this,"_handleData",e=>{let t=e.target.id,{personalInfo:a}=this.state;a[t]=e.target.value,this.setState({personalInfo:a})}),O(this,"_handleTime",e=>{let{personalInfo:t}=this.state,a=1e3*h()(e,"YYYY/MM/DD").unix();t.birthday=a,this.setState({personalInfo:t})}),O(this,"_handleGender",e=>{let{personalInfo:t}=this.state,a=e.target.value;t.gender=a,this.setState({personalInfo:t})}),O(this,"_handleClose",()=>{let{show_popup:e}=this.state;e=!e,this.setState({show_popup:e})}),O(this,"_closeModal",()=>{this.setState({show_popup:!1})}),O(this,"_setMap",()=>{let{personalInfo:e,addressChange:t}=this.state;e.lat=t.lat,e.lon=t.lon,e.address=t.address,this.setState({personalInfo:e}),this._handleClose()}),O(this,"_openLocation",()=>{this.setState({show_popup:!0})}),O(this,"_upLoadFile",(e,t,a)=>{let n=this.state[e],l=a.target.files,s=new FileReader;s.readAsDataURL(l[0]),s.onload=e=>{this.setState({[t]:e.target.result})},n=l[0],this.setState({[e]:n})}),O(this,"_createRequest",async()=>{let{personalInfo:e,avatar:t}=this.state,a={firstName:e.firstName,lastName:e.lastName,gender:e.gender,email:e.email,phone:e.phone,birthday:e.birthday,identityCard:e.identityCard,lat:e.lat,lon:e.lon,studentCode:e.studentCode};if(await Object(d.a)(u.d,a,"/api/students/personalInfo",null,null,null,!0),""!==t){let e=new FormData;e.append("avatar",t),await Object(d.a)(u.d,e,"/api/students/avatar?avatarContentType=image%2Fpng",null,y.d)}await this.props._fixData("person"),await this.props.getData(),await this.setState({loading:!1})}),O(this,"onSave",()=>{this.setState({loading:!0}),this.checkValid()?this._createRequest():this.setState({loading:!1})}),O(this,"getLatLngFromMap",(e,t,a)=>{let{addressChange:n}=this.state;n.address=a,n.lat=e,n.lon=t,this.setState({addressChange:n})}),this.state={personalInfo:{firstName:"",lastName:"",birthday:"",gender:"",address:"",phone:"",identityCard:"",lat:21.0223575259305,lon:105.82227458143632},show_popup:!1,addressChange:{address:"",lat:0,lon:0},location:"",address:"",avatarUrl:"",avatar:"",isLookingForJobs:!0,onPressSave:!1,loading:!1}}async componentDidMount(){console.log("onPressSave: "+this.state.onPressSave);let{personalInfo:e,address:t,location:a}=this.props;t=e.address,a=t;let n=e.isLookingForJobs,{avatarUrl:l}=this.state;l=e.avatarUrl;let s={...e};await this.setState({personalInfo:s,location:a,address:t,avatarUrl:l,isLookingForJobs:n})}checkValid(){this.setState({onPressSave:!0});let{personalInfo:e}=this.state;return!!e.lastName&&(!!e.firstName&&(!!e.address&&(!!e.phone&&(!!e.address&&-1!==e.birthday))))}render(){let{show_popup:e,onPressSave:t,personalInfo:a}=this.state,n=-1!==a.birthday?Object(D.a)(a.birthday):null;return l.a.createElement("div",{className:"wrapper",id:"person"},l.a.createElement(i.Modal,{visible:e,onCancel:this._handleClose,onOk:this._setMap,style:{top:"15vh"},title:"Định vị trên bản đồ",className:"modal-map",footer:[l.a.createElement(i.Button,{key:"back",onClick:this._handleClose},"Trở lại"),l.a.createElement(i.Button,{key:"submit",type:"primary",onClick:this._setMap},"Cập nhật")]},l.a.createElement("div",{style:{position:"relative",height:"60vh"}},l.a.createElement(w,{GetLatLngToParent:this.getLatLngFromMap}))),l.a.createElement(i.Row,{className:"person-info"},l.a.createElement(i.Col,{xs:24,sm:12,span:12},l.a.createElement("p",null,"Họ*"),l.a.createElement(i.Form,{style:{width:"100%"}},l.a.createElement(i.Form.Item,{validateStatus:!a.lastName&&t?"error":null,help:!a.lastName&&t?"Chưa điền thông tin":null},l.a.createElement(i.Input,{id:"lastName",type:"text",className:"input_outside",placeholder:"Họ và đệm",value:a.lastName,onChange:this._handleData})))),l.a.createElement(i.Col,{xs:24,sm:12,span:12},l.a.createElement("p",null,"Tên*"),l.a.createElement(i.Form,{style:{width:"100%"}},l.a.createElement(i.Form.Item,{validateStatus:!a.firstName&&t?"error":null,help:!a.firstName&&t?"Chưa điền thông tin":null},l.a.createElement(i.Input,{id:"firstName",type:"text",className:"input_outside",placeholder:"Tên",value:a.firstName,onChange:this._handleData}))))),l.a.createElement(i.Row,{className:"person-info"},l.a.createElement(i.Col,{xs:24,sm:12,span:12},l.a.createElement(f,null)),l.a.createElement(i.Col,{xs:24,sm:12,span:12},l.a.createElement("p",null,"Giới tính"),l.a.createElement(i.Icon,{type:"man"}),l.a.createElement("label",null,l.a.createElement("input",{type:"radio",name:"gender",value:"MALE",onClick:this._handleGender,checked:"MALE"===a.gender})," ","Nam"),l.a.createElement(i.Icon,{type:"woman"}),l.a.createElement("label",null,l.a.createElement("input",{type:"radio",name:"gender",value:"FEMALE",onClick:this._handleGender,checked:"MALE"!==a.gender})," ","Nữ")),l.a.createElement(i.Col,{span:24},l.a.createElement("p",null,"Địa chỉ*"),l.a.createElement(i.Form,{style:{width:"100%"}},l.a.createElement(i.Form.Item,{validateStatus:!a.address&&t?"error":null,help:!a.address&&t?"Chưa chọn địa chỉ":null},l.a.createElement(i.Input,{id:"address",type:"text",className:"input_outside",placeholder:"Địa chỉ",value:a.address,onClick:this._openLocation}))))),l.a.createElement(i.Row,{className:"person-info"},l.a.createElement(i.Col,{xs:24,sm:12,span:12},l.a.createElement("p",null,"Điện thoại*"),l.a.createElement(i.Form,{style:{width:"100%"}},l.a.createElement(i.Form.Item,{validateStatus:!a.phone&&t?"error":null,help:!a.phone&&t?"Chưa điền thông tin":null},l.a.createElement(i.Input,{id:"phone",type:"text",className:"input_outside",placeholder:"Phone",value:a.phone,onChange:this._handleData})))),l.a.createElement(i.Col,{xs:24,sm:12,span:12},l.a.createElement("p",null,"Ngày sinh*"),l.a.createElement(i.Form,{style:{width:"100%"}},l.a.createElement(i.Form.Item,{validateStatus:-1===a.birthday&&t?"error":null,help:-1===a.birthday&&t?"Chưa chọn ngày sinh":null},l.a.createElement(i.DatePicker,{className:"input_outside",value:-1!==a.birthday&&n?h()(n,"DD/MM/YYYY"):null,format:"DD-MM-YYYY",onChange:this._handleTime,placeholder:"Ngày sinh"}))))),l.a.createElement(i.Row,{className:"person-info"},l.a.createElement(i.Col,{xs:24,sm:12,span:12},l.a.createElement("p",null,"Số CMND"),l.a.createElement(i.Input,{id:"identityCard",type:"text",className:"input_outside",placeholder:"CMND",value:a.identityCard,onChange:this._handleData})),l.a.createElement(i.Col,{xs:24,sm:12,span:12},l.a.createElement("p",null,"Mã sinh viên"),l.a.createElement(i.Input,{id:"studentCode",type:"text",className:"input_outside",placeholder:"Mã sinh viên",value:a.studentCode,onChange:this._handleData}))),l.a.createElement(i.Row,{className:"holder-button"},l.a.createElement(i.Col,{xs:12},l.a.createElement(i.Button,{type:"danger",icon:"close",onClick:()=>{this.props._fixData("person")}},"Hủy")),l.a.createElement(i.Col,{xs:12},l.a.createElement(i.Button,{type:"primary",icon:"save",onClick:this.onSave},this.state.loading?l.a.createElement(i.Icon,{type:"loading"}):"Lưu"))))}}var T=Object(s.connect)(e=>({personalInfo:e.FullPersonalInfo.personalInfo}),e=>({getData:()=>e({type:g.b.PERSON_INFO.GET_FULL_PERSON_INFO})}))(L),F=a(92);function R(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}class P extends n.Component{constructor(e){super(e),R(this,"_handleDescription",e=>{this.setState({description:e.target.value})}),R(this,"_createRequest",async()=>{let{description:e}=this.state;this.setState({loading:!0}),await Object(d.a)(this.props.method,e,"/api/students/description",null,y.e,null,!0),await this.props._fixData("description"),await this.props.reloadData(),await this.setState({loading:!0})}),this.state={description:"",loading:!1}}componentDidMount(){let{description:e}=this.props;this.setState({description:e})}render(){let{description:e}=this.state;return(l.a.createElement("div",{className:"wrapper"},l.a.createElement(i.Input.TextArea,{placeholder:"Giới thiệu tính cách, sở thích, câu nói yêu thích của bản thân",onChange:this._handleDescription,rows:10,value:e}),l.a.createElement(i.Row,{className:"holder-button"},l.a.createElement(i.Col,{span:12},l.a.createElement(i.Button,{className:"danger",size:"large",icon:"close",onClick:()=>{this.props._fixData("description")}},"Hủy")),l.a.createElement(i.Col,{span:12},l.a.createElement(i.Button,{type:"primary",size:"large",icon:"save",onClick:()=>this._createRequest()},this.state.loading?l.a.createElement(i.Icon,{type:"loading"}):"Lưu")))))}}var M=Object(s.connect)(e=>({description:e.FullPersonalInfo.description}),(e,t)=>({reloadData:()=>{e({type:g.b.PERSON_INFO.GET_FULL_PERSON_INFO})}}))(P),j=a(11);var U=Object(s.connect)(e=>({description:e.FullPersonalInfo.description}),null)((function(e){return l.a.createElement("div",{className:"wrapper"},e.description?l.a.createElement("div",{className:"test",style:{minHeight:"150px",padding:10,cursor:"pointed"},onClick:e.onClick?()=>e.onClick(j.a.DESCRIPTION):void 0},e.description):l.a.createElement("div",{onClick:e.onClick?()=>e.onClick(j.a.DESCRIPTION):void 0},l.a.createElement(i.Empty,{description:l.a.createElement("b",null,"Nhấp vào để mục tiêu nghề nghiệp")})))})),A=a(10),B=a(3),K=a(7);function Y(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}class V extends n.Component{constructor(e){super(e),Y(this,"_addLabel",(e,t)=>{let{skills:a,list_skills:n}=this.state;a.push(e),-1!==t&&n.splice(t,1),this.setState({skills:a,list_skills:n})}),Y(this,"_removeTag",(e,t,a)=>{let{skills:n,list_skills:l}=this.state,s=e;-1!==s&&n.splice(s,1),l.push({id:a,name:t}),this.setState({skills:n,list_skills:l})}),Y(this,"_createRequest",async()=>{await this.requestToServer()}),Y(this,"_getSkills",e=>{}),this.state={state:["Thiết kế","PHP","html"],list_skills:[],skills:[],params:{pageIndex:0,pageSize:0},list_tag:[]}}async componentDidMount(){let{skills:e}=this.props,{list_skills:t}=this.state;t=(await Object(A.b)(null,K.i,B.b,y.c)).data.items,this.setState({list_skills:t,skills:e})}async requestToServer(){let{skills:e}=this.state,t=e.map(e=>e.id);await Object(d.a)(u.d,t,p.n,null,null,null,!0),await this.props.getData(),await this.setState({skills:this.props.skills}),await this.props._fixData("skills")}render(){let{list_skills:e,skills:t}=this.state;return(l.a.createElement("div",{className:"wrapper"},l.a.createElement("div",{className:"ability"},l.a.createElement("p",null,l.a.createElement("b",null,"Thêm kĩ năng hoặc công việc phù hợp")),l.a.createElement("div",{className:"list-ability"},t&&t.map((e,t)=>l.a.createElement("label",{key:t,className:"tag-ablity"},e.name,l.a.createElement(i.Icon,{type:"close",onClick:()=>{this._removeTag(t,e.name,e.id)}})))),l.a.createElement("div",{className:"list-skills"},l.a.createElement("ul",{className:"data-api"},e&&e.map((e,t)=>l.a.createElement("label",{id:e.id,key:t,onClick:()=>this._addLabel(e,t)},e.name)))),l.a.createElement(i.Row,{className:"holder-button"},l.a.createElement(i.Col,{span:12},l.a.createElement(i.Button,{type:"danger",size:"large",icon:"close",onClick:()=>{this.props._fixData("skills")}},"Hủy")),l.a.createElement(i.Col,{span:12},l.a.createElement(i.Button,{type:"primary",size:"large",icon:"save",onClick:()=>this._createRequest()},"Lưu"))))))}}var q=Object(s.connect)(e=>({skills:e.FullPersonalInfo.skills}),e=>({getData:()=>e({type:g.b.PERSON_INFO.GET_FULL_PERSON_INFO})}))(V);var G=Object(s.connect)(e=>({skills:e.FullPersonalInfo.skills}),null)((function(e){let{skills:t}=e;return(l.a.createElement("div",{className:"wrapper"},l.a.createElement("div",{style:{marginBottom:20}},l.a.createElement("b",null,"Thêm công việc hoặc kĩ năng để nhà tuyển dụng tìm kiếm phù hợp với bạn.")),t&&t.length>0?t.map((e,t)=>l.a.createElement("label",{key:t},l.a.createElement("span",{className:"tag-ability"}," ",e.name))):l.a.createElement("div",{onClick:()=>e.onClick(j.a.SKILLS)},l.a.createElement(i.Empty,{description:l.a.createElement("b",null,"Nhấp vào để thêm kỹ năng")}))))})),z=a(12),H=a.n(z);function X(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}class J extends n.Component{constructor(e){super(e),X(this,"_handleInput",e=>t=>{let a=t.target.value,{experience:n}=this.state;n[e]=a,this.setState({experience:n})}),X(this,"_handleChangeStartedTime",e=>{let{experience:t}=this.state,a=1e3*h()(e,"YYYY/MM/DD").unix();t.startedDate=a,this.setState({experience:t})}),X(this,"_handleChangeFinishedTime",e=>{let{experience:t}=this.state,a=1e3*h()(e,"YYYY/MM/DD").unix();t.finishedDate=a,this.setState({experience:t})}),X(this,"_createRequest",()=>{this.requestServer()}),this.state={experience:{jobName:"",companyName:"",startedDate:0,finishedDate:0,description:""}}}async requestServer(){let{method:e}=this.props,{experience:t}=this.state;if(t.finishedDate<t.startedDate&&H()({title:"Worksvns thông báo",text:"Ngày bắt đầu không thể sau ngày kết thúc",icon:j.a.ERROR,dangerMode:!1}),e===u.c){await Object(d.a)(u.c,t,p.d,null,null,null,!0)&&(await this.props.getData(),await this.props._fixData("experience"))}}render(){let{experience:e}=this.state;return(l.a.createElement("div",{className:"wrapper"},l.a.createElement("div",{className:"experience"},l.a.createElement("div",{className:"experience-content"},l.a.createElement("p",null,l.a.createElement("label",{style:{color:"red"}},"*"),"Tên vị trí"),l.a.createElement(i.Input,{className:"input_outside",placeholder:"Ví dụ: UX-UI Designer",value:e.jobName,onChange:this._handleInput("jobName")})),l.a.createElement("div",{className:"experience-content"},l.a.createElement("p",null,l.a.createElement("label",{style:{color:"red"}},"*"),"Tên Tổ chức"),l.a.createElement(i.Input,{className:"input_outside",placeholder:"Ví dụ: Công ti cổ phần Works.vn",value:e.companyName,onChange:this._handleInput("companyName")})),l.a.createElement("div",{className:"experience-content"},l.a.createElement(i.Row,{style:{marginTop:20}},l.a.createElement(i.Col,{xs:24,sm:24,md:12,lg:12,xl:12,className:"properties"},l.a.createElement("p",null," ",l.a.createElement("label",{style:{color:"red"}},"*"),"Từ tháng"),l.a.createElement(i.DatePicker,{onChange:this._handleChangeStartedTime,placeholder:"Ví dụ: 26/6/2018"})),l.a.createElement(i.Col,{xs:24,sm:24,md:12,lg:12,xl:12,className:"properties"},l.a.createElement("p",null,l.a.createElement("label",{style:{color:"red"}},"*"),"Từ tháng"),l.a.createElement(i.DatePicker,{onChange:this._handleChangeFinishedTime,placeholder:"Ví dụ: 26/6/2018"})))),l.a.createElement("div",{className:"experience-content"},l.a.createElement("p",null," ",l.a.createElement("label",{style:{color:"red"}},"*"),"Mô tả nội dung"),l.a.createElement(i.Input.TextArea,{id:"description",placeholder:"Nhập nội dung và mô tả cụ thể công việc đã làm",value:e.description,onChange:this._handleInput("description"),rows:7})),l.a.createElement("p",null,l.a.createElement("label",{style:{color:"red"}},"*"),"Thông tin bắt buộc")),l.a.createElement(i.Row,{className:"holder-button"},l.a.createElement(i.Col,{xs:12},l.a.createElement(i.Button,{type:"danger",icon:"close",onClick:()=>{this.props._fixData("experience")}}," Hủy")),l.a.createElement(i.Col,{xs:12},l.a.createElement(i.Button,{type:"primary",icon:"save",onClick:()=>this._createRequest()},"Lưu")))))}}var W=Object(s.connect)(null,e=>({getData:()=>e({type:g.b.PERSON_INFO.GET_FULL_PERSON_INFO})}))(J),$=a(42);function Q(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}class Z extends n.Component{constructor(e){super(e),Q(this,"componentDidMount",()=>{let{item:e,complete:t}=this.props,{experience:a,activeKey:n}=this.state;a=e,n=t,this.setState({experience:a,activeKey:n})}),Q(this,"_handleInput",e=>t=>{let a=t.target.value,{experience:n}=this.state;n[e]=a,this.setState({experience:n})}),Q(this,"_handleSelect",e=>{let{activeKey:t}=this.state;t=e,this.setState({activeKey:t})}),Q(this,"_handleChangeStartedTime",e=>{let{experience:t}=this.state;if(null!==e){let a=1e3*h()(e,"YYYY/MM/DD").unix();t.startedDate=a,this.setState({experience:t})}}),Q(this,"_handleChangeFinishedTime",e=>{let{experience:t}=this.state;if(null!==e){let a=1e3*h()(e,"YYYY/MM/DD").unix();t.finishedDate=a,this.setState({experience:t})}}),Q(this,"_createRequest",e=>{this.requesToServer(e)}),this.state={activeKey:"",experience:{jobName:"",companyName:"",startedDate:0,finishedDate:0,description:""},id:""}}async requesToServer(e){let t,{experience:a}=this.state,{id:n,complete:l}=this.props;e===u.d&&(""===a.companyName||""===a.jobName||null===a.startedDate||null===a.finishedDate||a.startedDate>a.finishedDate||(t=await Object(d.a)(u.d,a,p.d+"/"+n,null,null,null,!0))),e===u.a&&(t=await Object(d.a)(u.a,null,p.d+"/"+n,null,null,null,!0)),t&&t&&(await this.props.getData(),await this._handleSelect(l))}render(){let{item:e,complete:t,fix:a}=this.props,{experience:n,activeKey:s}=this.state,r=Object(D.a)(n.startedDate),c=Object(D.a)(n.finishedDate);return l.a.createElement($.Tabs,{activeKey:s,onSelect:()=>{}},l.a.createElement($.Tab,{eventKey:t,onSelect:this._handleSelect,id:t},l.a.createElement("div",{className:"wrapper",id:t},l.a.createElement("div",{className:"edit-delete"},l.a.createElement(i.Icon,{type:"form",onClick:()=>{this._handleSelect(a)}}),l.a.createElement(i.Popconfirm,{title:"Bạn muốn xóa mục này ？",okText:"Xóa",cancelText:"Hủy",onConfirm:()=>this._createRequest(u.a),okType:"danger"},l.a.createElement(i.Icon,{type:"delete"}))),l.a.createElement("div",null,l.a.createElement("p",{className:"header-experience"},e.label),l.a.createElement("b",null,"Công việc: "),l.a.createElement("li",null," ",e.jobName),l.a.createElement("b",null,"Nơi làm việc: "),l.a.createElement("li",null," ",e.companyName),l.a.createElement("b",null,"Thời gian làm việc: "),l.a.createElement("li",null,e.startedDate>0?Object(D.a)(e.startedDate):"Chưa cập nhật","- ",e.finishedDate>0?Object(D.a)(e.finishedDate):"Chưa cập nhật"," "),l.a.createElement("b",null,"Mô tả: "),l.a.createElement("li",null," ",e.description)))),l.a.createElement($.Tab,{eventKey:a,title:""},l.a.createElement("div",{className:"wrapper"},l.a.createElement("div",{className:"experience"},l.a.createElement("div",{className:"experience-content"},l.a.createElement("p",null,l.a.createElement("label",{style:{color:"red"}},"*"),"Tên vị trí"),l.a.createElement(i.Input,{type:"text",className:"input_outside",placeholder:"Ví dụ: UX-UI Designer",value:n.jobName,onChange:this._handleInput("jobName")})),l.a.createElement("div",{className:"experience-content"},l.a.createElement("p",null,l.a.createElement("label",{style:{color:"red"}},"*"),"Tên Tổ chức"),l.a.createElement(i.Input,{type:"text",className:"input_outside",placeholder:"Ví dụ: Công ti cổ phần Works.vn",value:n.companyName,onChange:this._handleInput("companyName")})),l.a.createElement("div",{className:"experience-content"},l.a.createElement(i.Row,{style:{marginTop:20}},l.a.createElement(i.Col,{xs:24,sm:24,md:12,lg:12,xl:12,className:"column"},l.a.createElement("p",null," ",l.a.createElement("label",{style:{color:"red"}},"*"),"Từ tháng"),l.a.createElement(i.DatePicker,{defaultValue:h()(r,"DD/MM/YY"),onChange:this._handleChangeStartedTime,placeholder:"Ví dụ: 26/6/2018"})),l.a.createElement(i.Col,{xs:24,sm:24,md:12,lg:12,xl:12,className:"column"},l.a.createElement("p",null,l.a.createElement("label",{style:{color:"red"}},"*"),"Từ tháng"),l.a.createElement(i.DatePicker,{defaultValue:h()(c,"DD/MM/YY"),onChange:this._handleChangeFinishedTime,placeholder:"Ví dụ: 26/6/2018"})))),l.a.createElement("div",{className:"experience-content"},l.a.createElement("p",null," ",l.a.createElement("label",{style:{color:"red"}},"*"),"Mô tả nội dung"),l.a.createElement(i.Input.TextArea,{id:"description",placeholder:"Nhập nội dung và mô tả cụ thể công việc đã làm",value:n.description,onChange:this._handleInput("description"),rows:7})),l.a.createElement("p",null,l.a.createElement("label",{style:{color:"red"}},"*"),"Thông tin bắt buộc")),l.a.createElement(i.Row,{className:"holder-button"},l.a.createElement(i.Col,{span:12},l.a.createElement(i.Button,{className:"danger",size:"large",icon:"close",onClick:()=>{this._handleSelect(t)}},"Hủy")),l.a.createElement(i.Col,{span:12},l.a.createElement(i.Button,{type:"primary",size:"large",icon:"save",onClick:()=>this._createRequest(u.d)},"Lưu"))))))}}var ee=Object(s.connect)(null,e=>({getData:()=>e({type:g.b.PERSON_INFO.GET_FULL_PERSON_INFO})}))(Z);var te=Object(s.connect)(e=>({experiences:e.FullPersonalInfo.experiences}),null)((function(e){let{experiences:t}=e;return t.map((e,t)=>l.a.createElement(ee,{item:e,key:t,id:e.id,complete:"complete"+t+"experience",fix:"fix"+t+"experience"}))}));class ae extends n.Component{constructor(e){super(e),this.state={education:{school:"",branchOfLearning:"",startedDate:0,finishedDate:0,description:""}}}render(){let{schools:e,personalInfo:t,major:a}=this.props;return(l.a.createElement("div",{className:"education"},l.a.createElement("div",{className:"wrapper"},l.a.createElement("div",{className:"content-school"},l.a.createElement("p",null,l.a.createElement("b",null," Nơi học:")),l.a.createElement("li",null,e.name," (",e.shortName,")")),l.a.createElement("div",{className:"content-school"},l.a.createElement("p",null,l.a.createElement("b",null," Mã sinh viên:")),l.a.createElement("li",null,t.studentCode)),l.a.createElement("div",{className:"content-school"},l.a.createElement("p",null,l.a.createElement("b",null,"Chuyên ngành học / Ngành học:")),l.a.createElement("li",null,a&&a.name," /"," ",a&&a.branch&&a.branch.name)))))}}var ne=Object(s.connect)(e=>({schools:e.FullPersonalInfo.educations,personalInfo:e.FullPersonalInfo.personalInfo,major:e.FullPersonalInfo.major,redux:e.FullPersonalInfo}),e=>({getData:()=>e({type:g.b.PERSON_INFO.GET_FULL_PERSON_INFO})}))(ae);function le(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}class se extends n.Component{constructor(e){super(e),le(this,"_handleData",e=>{let t,{education:a}=this.state;t=e.target.id,a[t]=e.target.value,this.setState({education:a})}),le(this,"_handleChangeStartedTime",e=>{let{education:t}=this.state,a=1e3*h()(e,"YYYY/MM/DD").unix();t.startedDate=a,this.setState({education:t})}),le(this,"_handleChangeFinishedTime",e=>{let{education:t}=this.state,a=1e3*h()(e,"YYYY/MM/DD").unix();t.finishedDate=a,this.setState({education:t})}),le(this,"_createRequest",()=>{this.requestServer(u.c)}),this.state={education:{school:"",branchOfLearning:"",startedDate:0,finishedDate:0,description:""}}}async requestServer(e){let{education:t}=this.state;if(""===t.description||""===t.school||""===t.branchOfLearning||0===t.startedDate||0===t.finishedDate);else if(e===u.c){await Object(d.a)(u.c,t,p.c,null,null,null,!0)&&(await this.props.getData(),await this.props._fixData("education"))}}render(){let{education:e}=this.state;return(l.a.createElement("div",{className:"wrapper"},l.a.createElement("div",{className:"education"},l.a.createElement("div",{className:"education-content"},l.a.createElement("p",null,l.a.createElement("label",{style:{color:"red"}},"*"),"Tên ngành/nghề đào tạo"),l.a.createElement(i.Input,{className:"input_outside",placeholder:"Ví dụ: Công nghệ thông tin",value:e.branchOfLearning,onChange:this._handleData})),l.a.createElement("div",{className:"education-content"},l.a.createElement("p",null,l.a.createElement("label",{style:{color:"red"}},"*"),"Tên cơ sở đào tạo"),l.a.createElement(i.Input,{className:"input_outside",placeholder:"Ví dụ: Trường Cao đẳng nghề",value:e.school,onChange:this._handleData})),l.a.createElement("div",{className:"education-content"},l.a.createElement(i.Row,null,l.a.createElement(i.Col,{xs:24,sm:24,md:12,lg:12,xl:12,className:"column"},l.a.createElement("p",null," ",l.a.createElement("label",{style:{color:"red"}},"*"),"Từ tháng"),l.a.createElement(i.DatePicker,{onChange:this._handleChangeStartedTime,placeholder:"Ví dụ: 26/6/2018"})),l.a.createElement(i.Col,{xs:24,sm:24,md:12,lg:12,xl:12,className:"column"},l.a.createElement("p",null,l.a.createElement("label",{style:{color:"red"}},"*"),"Từ tháng"),l.a.createElement(i.DatePicker,{onChange:this._handleChangeFinishedTime,placeholder:"Ví dụ: 26/6/2018"})))),l.a.createElement("div",{className:"education-content"},l.a.createElement("p",null," ",l.a.createElement("label",{style:{color:"red"}},"*"),"Mô tả nội dung"),l.a.createElement(i.Input.TextArea,{id:"description",placeholder:"Mô tả sơ lược quá trình học bạn làm những công việc gì, có tham gia các hoạt động ngoại khóa và chức vụ gì trong lớp",value:e.description,onChange:this._handleData,rows:7})),l.a.createElement("p",null,l.a.createElement("label",{style:{color:"red"}},"*"),"Thông tin bắt buộc")),l.a.createElement(i.Row,{className:"holder-button"},l.a.createElement(i.Col,{xs:12},l.a.createElement("button",{className:"danger",onClick:()=>{this.props._fixData("education")}}," Hủy")),l.a.createElement(i.Col,{xs:12},l.a.createElement("button",{className:"request",onClick:()=>this._createRequest()}," Lưu")))))}}var ie=Object(s.connect)(null,(e,t)=>({getData:()=>e({type:g.b.PERSON_INFO.GET_FULL_PERSON_INFO})}))(se);function re(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}let{Option:ce}=i.Select;class oe extends n.Component{constructor(e){super(e),re(this,"_deleteLanguageSkill",()=>{let{id:e}=this.props.id;this._createRequest(e)}),re(this,"_handleSelect",e=>{let{activeKey:t}=this.state;t=e,this.setState({activeKey:t})}),re(this,"_choseLevel",e=>{let t=e.target.value;this._handleLanguageSkills(t,"level")}),re(this,"_chooseLanguage",e=>{this._handleLanguageSkills(e,"languageID")}),re(this,"_handleLanguageSkills",(e,t)=>{let{languageSkill:a}=this.state;a[t]=e,this.setState({languageSkill:a})}),re(this,"_createRequest",e=>{this.requestServer(e)}),this.state={languageSkill:{languageID:0,level:"",certificate:"",score:0},id:"",activeKey:this.props.complete,list_language:[]}}async componentDidMount(){let{languageSkill:e,activeKey:t,list_language:a}=this.state,{item:n}=this.props;console.log(n),a=(await Object(A.b)(null,K.e,B.b,y.c)).data.items;let l={...this.state.languageSkill,level:n.level,certificate:n.certificate,score:n.score,languageID:n.language&&n.language.id};this.setState({languageSkill:l,activeKey:t,list_language:a})}async requestServer(e){let{id:t,complete:a}=this.props,{languageSkill:n}=this.state;if(e===u.d)await Object(d.a)(u.d,n,p.g+"/"+t,B.c,null,null,!0);else if(e===u.a){let e=[t];await Object(d.a)(u.a,null,p.g,B.c,null,e,!0)}await this.props.getData(),await this._handleSelect(a)}render(){let{index:e,item:t,complete:a,fix:n}=this.props,{languageSkill:s,activeKey:r,list_language:c}=this.state;return l.a.createElement($.Tabs,{key:e,activeKey:r,onSelect:()=>{}},l.a.createElement($.Tab,{eventKey:a,onSelect:this._handleSelect,id:a},l.a.createElement("div",{className:"wrapper"},l.a.createElement("div",{className:"edit-delete"},l.a.createElement(i.Icon,{type:"form",onClick:()=>{this._handleSelect(n)}}),l.a.createElement(i.Popconfirm,{title:"Bạn muốn xóa mục này ？",okText:"Xóa",cancelText:"Hủy",onConfirm:()=>this._createRequest(u.a),okType:"danger"},l.a.createElement(i.Icon,{type:"delete"}))),l.a.createElement("div",{className:"language-skills ",id:a},l.a.createElement(i.Row,{style:{margin:"20px 10px 0px"}},l.a.createElement(i.Col,{sm:24,md:12,lg:12,xs:12,xxl:12},l.a.createElement(i.Icon,{type:"message"}),l.a.createElement("b",null,"Ngôn ngữ: ",t.language.name)),l.a.createElement(i.Col,{sm:24,md:12,lg:12,xs:12,xxl:12},l.a.createElement(i.Icon,{type:"book"}),l.a.createElement("b",null,"Trình độ: ",t.level))),l.a.createElement(i.Row,{style:{margin:10}},l.a.createElement(i.Col,{sm:24,md:12,lg:11,xs:12,xxl:12},l.a.createElement("b",null,l.a.createElement(i.Icon,{type:"star"}),"Chứng chỉ: ",t.certificate?t.certificate:"Không")),l.a.createElement(i.Col,{sm:24,md:12,lg:12,xs:12,xxl:12},l.a.createElement("b",null,l.a.createElement(i.Icon,{type:"highlight"}),"Điểm số: ",t.score?t.score:"Không")))))),l.a.createElement($.Tab,{eventKey:n},l.a.createElement("div",{className:"wrapper"},l.a.createElement("div",{className:"language-skills-fix"},l.a.createElement(i.Row,null,l.a.createElement(i.Col,{xs:24,md:12,lg:12,sm:24},l.a.createElement("p",{className:"language-input"},"Chọn ngôn ngữ"),l.a.createElement(i.Select,{showSearch:!0,placeholder:"Chose language",style:{width:"100%"},optionFilterProp:"children",onChange:e=>this._chooseLanguage(e),filterOption:(e,t)=>t.props.children.toLowerCase().indexOf(e.toLowerCase())>=0,defaultValue:t.language.id},c.map((e,t)=>l.a.createElement(ce,{value:e.id,key:t+"fix_language"},e.name)))),l.a.createElement(i.Col,{xs:12,md:12,lg:12,sm:12},l.a.createElement("p",{className:"language-input"},"Trình độ"),l.a.createElement(i.Radio.Group,{onChange:this._choseLevel,value:s.level},l.a.createElement(i.Radio,{value:"Bản địa"},"Bản địa"),l.a.createElement(i.Radio,{value:"Sơ cấp"},"Sơ cấp"),l.a.createElement(i.Radio,{value:"Trung cấp"},"Trung cấp"),l.a.createElement(i.Radio,{value:"Cao cấp"},"Cao cấp")))),l.a.createElement(i.Row,null,l.a.createElement(i.Col,{xs:24,md:12,lg:12,sm:24},l.a.createElement("p",{className:"language-input"},"Chứng chỉ"),l.a.createElement(i.Input,{placeholder:"Certificate",value:s.certificate,onChange:e=>this._handleLanguageSkills(e.target.value,"certificate")})),l.a.createElement(i.Col,{xs:24,md:12,lg:12,sm:24},l.a.createElement("p",null,"Điểm số"),l.a.createElement(i.Input,{placeholder:"Score",value:s.score,onChange:e=>this._handleLanguageSkills(e.target.value,"score")}))),l.a.createElement(i.Row,{className:"holder-button"},l.a.createElement(i.Col,{xs:12},l.a.createElement(i.Button,{className:"danger",size:"large",icon:"close",onClick:()=>{this._handleSelect(a)}},"Hủy")),l.a.createElement(i.Col,{xs:12},l.a.createElement(i.Button,{type:"primary",size:"large",icon:"save",onClick:()=>this._createRequest(u.d)},"Lưu")))))))}}var me=Object(s.connect)(e=>({}),(e,t)=>({getData:()=>e({type:g.b.PERSON_INFO.GET_FULL_PERSON_INFO})}))(oe);class he extends n.Component{constructor(e){var t,a,n;super(e),n=e=>{let{langSkState:t}=this.state,a=e.target.id,n=!t[a].is_fix;t[a].is_fix=n,this.props.updateLgState(t)},(a="_updateLanguageSkillsState")in(t=this)?Object.defineProperty(t,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[a]=n,this.state={langSkState:[],languageSkills:[],list_component:[]}}static getDerivedStateFromProps(e,t){if(e.langSkState!==t.langSkState){let{languageSkills:a}=e,{langSkState:n}=t,l=[];for(let e=0;e<a.length;e++)l.push(!0);return{languageSkills:a,langSkState:n,list_component:l}}return null}render(){let{languageSkills:e}=this.props;return(l.a.createElement("div",null,e&&e.map((e,t)=>l.a.createElement(me,{item:e,key:t,complete:"complete"+t+"lg",fix:"fix"+t+"lg",id:e.id}))))}}var de=Object(s.connect)(e=>({languageSkills:e.FullPersonalInfo.languageSkills}),(e,t)=>({}))(he),pe=a(40);function ue(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}class ge extends n.Component{constructor(e){super(e),ue(this,"_handleData",e=>{let t=e.target.id,{personalInfo:a}=this.state;a[t]=e.target.value,this.setState({personalInfo:a})}),ue(this,"_handleTime",e=>{let{personalInfo:t}=this.state,a=1e3*h()(e,"YYYY/MM/DD").unix();t.birthday=a,this.setState({personalInfo:t})}),ue(this,"_handleGender",e=>{let{personalInfo:t}=this.state,a=e.target.value;t.gender=a,this.setState({personalInfo:t})}),ue(this,"_handleClose",()=>{let{show_popup:e}=this.state;e=!e,this.setState({show_popup:e})}),ue(this,"_closeModal",()=>{this.setState({show_popup:!1})}),ue(this,"_upLoadFile",(e,t,a)=>{let n=this.state[e],l=a.target.files,s=new FileReader;s.readAsDataURL(l[0]),s.onload=e=>{this.setState({[t]:e.target.result})},n=l[0],this.setState({[e]:n})}),ue(this,"_createRequest",async()=>{let{identityCardBack:e,identityCardFront:t}=this.state;if(""!==e||""!==t){this.setState({loading:!0});let a=new FormData;a.append("front",t),a.append("back",e),await Object(d.a)(u.d,a,"/api/students/cardImages",null,y.d)}await this.props.getData(),await this.setState({loading:!1}),await this.props._fixData("picture")}),this.state={identityCardFrontUrl:"",identityCardFront:"",identityCardBackUrl:"",identityCardBack:"",personalInfo:null,show_popup:!1,loading:!1}}componentDidMount(){let{personalInfo:e}=this.props,{identityCardFrontUrl:t,identityCardBackUrl:a}=this.state;a=e.identityCardBackImageUrl,t=e.identityCardFrontImageUrl,this.setState({identityCardFrontUrl:t,identityCardBackUrl:a})}render(){let{identityCardFrontUrl:e,identityCardBackUrl:t}=this.state;return(l.a.createElement("div",{id:"fix-picture",className:"wrapper"},l.a.createElement(i.Row,{className:"short-profile"},l.a.createElement(i.Col,{xs:24,md:12,xl:12,lg:12,xxl:12},l.a.createElement("div",{className:"identity-img"},l.a.createElement(pe.LazyLoadImage,{src:e,alt:"ảnh CMND",height:"100%",width:"100%"}),l.a.createElement("label",{htmlFor:"FrontImg"},l.a.createElement(i.Icon,{type:"upload"}),l.a.createElement("b",null,"Upload ảnh mặt trước CMND")),l.a.createElement(i.Input,{id:"FrontImg",type:"file",name:"file",alt:"ảnh CMND",style:{display:"none"},onChange:e=>{this._upLoadFile("identityCardFront","identityCardFrontUrl",e)}}))),l.a.createElement(i.Col,{xs:24,md:12,xl:12,lg:12,xxl:12},l.a.createElement("div",{className:"identity-img"},l.a.createElement(pe.LazyLoadImage,{src:t,alt:"ảnh CMND",height:"100%",width:"100%"}),l.a.createElement("label",{htmlFor:"backImg"},l.a.createElement(i.Icon,{type:"upload"}),l.a.createElement("b",null,"Upload ảnh mặt sau CMND")),l.a.createElement(i.Input,{id:"backImg",type:"file",name:"file",alt:"ảnh CMND",style:{display:"none"},onChange:e=>{this._upLoadFile("identityCardBack","identityCardBackUrl",e)}})))),l.a.createElement(i.Row,{className:"holder-button"},l.a.createElement(i.Col,{xs:12},l.a.createElement(i.Button,{className:"danger",size:"large",icon:"close",onClick:()=>{this.props._fixData("picture")}},"Hủy")),l.a.createElement(i.Col,{xs:12},l.a.createElement(i.Button,{type:"primary",size:"large",icon:"save",onClick:()=>this._createRequest()},this.state.loading?l.a.createElement(i.Icon,{type:"loading"}):"Lưu")))))}}var Ee=Object(s.connect)(e=>({personalInfo:e.FullPersonalInfo.personalInfo,marker:e.MapState.marker}),e=>({getData:()=>e({type:g.b.PERSON_INFO.GET_FULL_PERSON_INFO})}))(ge),fe=a(16);var ye=Object(s.connect)(e=>({personalInfo:e.FullPersonalInfo.personalInfo}),null)((function(e){let{personalInfo:t}=e;return(l.a.createElement("div",{className:"wrapper"},l.a.createElement("div",{className:"short-profile"},l.a.createElement(i.Row,null,l.a.createElement(i.Col,{xs:24,md:12,xl:12,lg:12,xxl:12},l.a.createElement("div",{className:"identity-img"},l.a.createElement(pe.LazyLoadImage,{src:t.identityCardFrontImageUrl,onError:e=>{e.target.src={imageDefault:fe.a}},alt:"ảnh CMND",height:"100%",width:"100%"}),l.a.createElement("label",null,l.a.createElement(i.Icon,{type:"file-image"}),l.a.createElement("b",null,"Ảnh mặt trước")))),l.a.createElement(i.Col,{xs:24,md:12,xl:12,lg:12,xxl:12},l.a.createElement("div",{className:"identity-img"},l.a.createElement(pe.LazyLoadImage,{src:t.identityCardBackImageUrl,alt:"ảnh CMND",onError:e=>{e.target.src={imageDefault:fe.a}},height:"100%",width:"100%"}),l.a.createElement("label",null,l.a.createElement(i.Icon,{type:"file-image"}),l.a.createElement("b",null,"Ảnh mặt sau"))))))))}));function ve(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}let{Option:Ce}=i.Select;class be extends n.Component{constructor(e){super(e),ve(this,"_choseLevel",e=>{let t=e.target.value;this._handleLanguageSkills(t,"level")}),ve(this,"_chooseLanguage",e=>{this._handleLanguageSkills(e,"languageID")}),ve(this,"_handleLanguageSkills",(e,t)=>{let{languageSkill:a}=this.state;a[t]=e,this.setState({languageSkill:a})}),ve(this,"_createRequest",()=>{this.requestServer(this.props.method)}),this.state={list_language:[],is_show:!1,choose_lg:{},languageName:"",languageSkill:{languageID:0,level:"Bản địa",certificate:"",score:0}}}async componentDidMount(){let{list_language:e}=this.state;e=(await Object(A.b)(null,K.e,B.b,y.c)).data.items,this.setState({list_language:e})}async requestServer(e){let{languageSkill:t}=this.state;if(null===t.languageID||""===t.level);else if(e===u.c){await Object(d.a)(u.c,t,p.g,null,null,null,!0)&&(await this.props.getData(),await this.props._fixData("languageSkill"))}}render(){let{list_language:e,languageSkill:t}=this.state;return(l.a.createElement("div",{className:"wrapper language-skills-fix"},l.a.createElement(i.Row,{style:{marginTop:20}},l.a.createElement(i.Col,{xs:24,md:12,lg:12,sm:24},l.a.createElement("b",{className:"language-input"},"Chọn ngôn ngữ"),l.a.createElement(i.Select,{showSearch:!0,placeholder:"Chose language",style:{width:"100%"},optionFilterProp:"children",onChange:e=>this._chooseLanguage(e),filterOption:(e,t)=>t.props.children.toLowerCase().indexOf(e.toLowerCase())>=0},e.map((e,t)=>l.a.createElement(Ce,{value:e.id,key:t+"fix_language"},e.name)))),l.a.createElement(i.Col,{xs:12,md:12,lg:12,sm:12},l.a.createElement("b",{className:"language-input"},"Trình độ"),l.a.createElement(i.Radio.Group,{onChange:this._choseLevel,value:t.level},l.a.createElement(i.Radio,{value:"Bản địa"},"Bản địa"),l.a.createElement(i.Radio,{value:"Sơ cấp"},"Sơ cấp"),l.a.createElement(i.Radio,{value:"Trung cấp"},"Trung cấp"),l.a.createElement(i.Radio,{value:"Cao cấp"},"Cao cấp")))),l.a.createElement(i.Row,null,l.a.createElement(i.Col,{xs:24,md:12,lg:12,sm:24},l.a.createElement("b",{className:"language-input"},"Chứng chỉ"),l.a.createElement(i.Input,{placeholder:"Certificate",value:t.certificate,onChange:e=>this._handleLanguageSkills(e.target.value,"certificate")})),l.a.createElement(i.Col,{xs:24,md:12,lg:12,sm:24},l.a.createElement("b",null,"Điểm số"),l.a.createElement(i.InputNumber,{placeholder:"Score",value:t.score,style:{width:"100%"},onChange:e=>this._handleLanguageSkills(e,"score")}))),l.a.createElement(i.Row,{className:"holder-button"},l.a.createElement(i.Col,{xs:12},l.a.createElement(i.Button,{type:"danger",icon:"close",onClick:()=>{this.props._fixData("languageSkill")}}," Hủy")),l.a.createElement(i.Col,{xs:12},l.a.createElement(i.Button,{type:"primary",icon:"save",onClick:()=>this._createRequest()},"Lưu")))))}}var _e=Object(s.connect)(null,(e,t)=>({getData:()=>e({type:g.b.PERSON_INFO.GET_FULL_PERSON_INFO})}))(be),Ne=a(44),Se=a(65);class xe extends n.Component{render(){return l.a.createElement("div",{className:"drag-cv"},l.a.createElement("embed",{className:"hidden-mobile",key:this.props.cvUrl,src:this.props.cvUrl,style:{width:"100%",height:"25vw"}}),l.a.createElement(Ne.CopyToClipboard,{text:this.props.cvUrl,onCopy:()=>i.message.info("Sao chép thành công")},l.a.createElement("p",{style:{cursor:"pointed"}},"Link đường dẫn cv ",l.a.createElement(i.Tooltip,{title:"Copy link"},l.a.createElement(i.Icon,{type:"copy"})))),l.a.createElement("p",null,l.a.createElement("a",{href:this.props.cvUrl,target:"_blank",rel:"noopener noreferrer"},Object(Se.a)(this.props.cvUrl,30))))}}function Ie(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}class ke extends n.Component{constructor(e){super(e),Ie(this,"_addLabel",(e,t)=>{let{tools:a,toolList:n}=this.state;console.log(a),a.push(e),-1!==t&&n.splice(t,1),this.setState({tools:a,toolList:n})}),Ie(this,"_removeTag",(e,t,a)=>{let{tools:n,toolList:l}=this.state,s=e;-1!==s&&n.splice(s,1),l.push({id:a,name:t}),this.setState({tools:n,toolList:l})}),Ie(this,"_createRequest",async()=>{await this.requestToServer()}),Ie(this,"_getTools",e=>{}),this.state={state:["Thiết kế","PHP","html"],toolList:[],tools:[],params:{pageIndex:0,pageSize:0},list_tag:[]}}async componentDidMount(){let{tools:e}=this.props,{toolList:t}=this.state;t=(await Object(A.b)(null,K.j,B.b,y.c)).data.items,this.setState({toolList:t,tools:e})}async requestToServer(){let{tools:e}=this.state,t=e.map(e=>e.id);await Object(d.a)(u.d,t,p.o,null,null,null,!0),await this.props.getData(),await this.setState({tools:this.props.tools}),await this.props._fixData("tools")}render(){let{toolList:e,tools:t}=this.state;return(l.a.createElement("div",{className:"wrapper"},l.a.createElement("div",{className:"ability"},l.a.createElement("p",null,l.a.createElement("b",null,"Thêm công cụ, kỹ năng bạn có thể sử dụng")),l.a.createElement("div",{className:"list-ability"},t&&t.length>0?t.map((e,t)=>l.a.createElement("label",{key:t,className:"tag-ablity"},e.name,l.a.createElement(i.Icon,{type:"close",onClick:()=>{this._removeTag(t,e.name,e.id)}}))):""),l.a.createElement("div",{className:"list-skills"},l.a.createElement("ul",{className:"data-api"},e&&e.length>0?e.map((e,t)=>l.a.createElement("label",{id:e.id,key:t,onClick:()=>this._addLabel(e,t)},e.name)):"")),l.a.createElement(i.Row,{className:"holder-button"},l.a.createElement(i.Col,{span:12},l.a.createElement(i.Button,{type:"danger",size:"large",icon:"close",onClick:()=>{this.props._fixData("tools")}},"Hủy")),l.a.createElement(i.Col,{span:12},l.a.createElement(i.Button,{type:"primary",size:"large",icon:"save",onClick:()=>this._createRequest()},"Lưu"))))))}}var we=Object(s.connect)(e=>({tools:e.FullPersonalInfo.tools}),e=>({getData:()=>e({type:g.b.PERSON_INFO.GET_FULL_PERSON_INFO})}))(ke);var De=Object(s.connect)(e=>({tools:e.FullPersonalInfo.tools}),null)((function(e){let{tools:t}=e;return(l.a.createElement("div",{className:"wrapper"},l.a.createElement("div",{style:{marginBottom:20}},l.a.createElement("b",null,"Thêm các công cụ bạn có thể làm.")),t&&t.length>0?t.map((e,t)=>l.a.createElement("label",{key:t},l.a.createElement("span",{className:"tag-ability"}," ",e.name))):l.a.createElement("div",{onClick:()=>e.onClick(j.a.TOOLS)},l.a.createElement(i.Empty,{description:l.a.createElement("b",null,"Nhấp vào để thêm công cụ")}))))})),Oe=a(93);function Le(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}const{Link:Te}=i.Anchor,{Panel:Fe}=i.Collapse;class Re extends n.Component{constructor(e){super(e),Le(this,"icon_user",l.a.createElement(i.Icon,{type:"profile"})),Le(this,"icon_list",l.a.createElement(i.Icon,{type:"ordered-list"})),Le(this,"icon_star",l.a.createElement(i.Icon,{type:"star"})),Le(this,"icon_tower",l.a.createElement(i.Icon,{type:"folder"})),Le(this,"icon_bachelor",l.a.createElement(i.Icon,{type:"read"})),Le(this,"icon_solid_star",l.a.createElement(i.Icon,{type:"star"})),Le(this,"icon_tools",l.a.createElement(i.Icon,{type:"tool"})),Le(this,"setActiveKeyCV",()=>{this.setState({activeKeyCV:!1,listActiveKeyCV:[]})}),Le(this,"setActiveKeyCV2",()=>{this.setState({activeKeyCV:!0,listActiveKeyCV:["1"]})}),Le(this,"_fixData",e=>{let{profileState:t}=this.state,a=e;t[a]=!t[a],this.setState({profileState:t}),window.location.assign(`/profile#${e}`)}),this.state={profileState:{person:!1,description:!1,skills:!1,langugeSkills:!1,experiences:!1,education:!1,picture:!1,tools:!1},loading:!1,cvUrl:null,activeKeyCV:!0,listActiveKeyCV:[]}}async componentDidMount(){await this.props.getData(this.setActiveKeyCV,this.setActiveKeyCV2),this.setState({loading:!1})}componentWillUnmount(){window.removeEventListener("scroll",()=>{console.log("out scroll")})}render(){let{profileState:e,cvUrl:t}=this.state;return(l.a.createElement(r.a,{disableFooterData:!1},l.a.createElement("div",{className:"content-profile"},l.a.createElement(i.Row,{className:"profile"},l.a.createElement(i.Col,{xs:24,sm:24,md:12,lg:14,xl:13,xxl:13,className:"block-info"},l.a.createElement(o,{describe:"Thông tin cá nhân",icon:this.icon_user,id:j.a.PERSON},l.a.createElement("div",{className:"icon-fix",onClick:()=>{this._fixData(j.a.PERSON)}},l.a.createElement(i.Icon,{type:"edit"})),e[j.a.PERSON]?l.a.createElement(T,{_fixData:this._fixData}):l.a.createElement(F.a,null)),l.a.createElement(o,{describe:"Ảnh CMND/CCCD",icon:this.icon_list,id:"picture"},l.a.createElement("div",{className:"icon-fix",onClick:()=>{this._fixData("picture"),window.location.assign("/profile#picture")}},l.a.createElement(i.Icon,{type:"edit"})),e.picture?l.a.createElement(Ee,{_fixData:this._fixData,method:u.d}):l.a.createElement(ye,null)),l.a.createElement(o,{describe:"Mục tiêu nghề nghiệp",icon:this.icon_list,id:j.a.DESCRIPTION},l.a.createElement("div",{className:"icon-fix",onClick:()=>this._fixData(j.a.DESCRIPTION)},l.a.createElement(i.Icon,{type:"edit"})),e[j.a.DESCRIPTION]?l.a.createElement(M,{_fixData:this._fixData,method:u.d}):l.a.createElement(U,{onClick:this._fixData})),l.a.createElement(o,{describe:"Kỹ năng mềm",icon:this.icon_star,id:j.a.SKILLS},l.a.createElement("div",{className:"icon-fix",onClick:()=>this._fixData(j.a.SKILLS)},l.a.createElement(i.Icon,{type:"edit"})),e[j.a.SKILLS]?l.a.createElement(q,{_fixData:this._fixData}):l.a.createElement(G,{onClick:this._fixData})),l.a.createElement(o,{describe:"Công cụ chuyên môn",icon:this.icon_tools,id:j.a.TOOLS},l.a.createElement("div",{className:"icon-fix",onClick:()=>this._fixData(j.a.TOOLS)},l.a.createElement(i.Icon,{type:"edit"})),e[j.a.TOOLS]?l.a.createElement(we,{_fixData:this._fixData}):l.a.createElement(De,{onClick:this._fixData})),l.a.createElement(o,{describe:"Ngoại ngữ",icon:this.icon_list,id:j.a.LANGUAGE_SKILL},l.a.createElement("div",{className:"icon-fix",onClick:()=>this._fixData(j.a.LANGUAGE_SKILL)},l.a.createElement(i.Icon,{type:"plus",twoToneColor:"blue"})),l.a.createElement(de,null),e[j.a.LANGUAGE_SKILL]?l.a.createElement(_e,{_fixData:this._fixData,method:u.c}):null),l.a.createElement(o,{describe:"Kinh nghiệm làm việc",icon:this.icon_tower,id:j.a.EXPERIENCE},l.a.createElement("div",{className:"icon-fix",onClick:()=>this._fixData(j.a.EXPERIENCE)},l.a.createElement(i.Icon,{type:"plus",twoToneColor:"blue"})),l.a.createElement(te,null),e[j.a.EXPERIENCE]?l.a.createElement(W,{_fixData:this._fixData,method:u.c}):null),l.a.createElement(o,{describe:"Học vấn và bằng cấp",icon:this.icon_bachelor,id:j.a.EDUCATION},l.a.createElement(i.Tooltip,{title:"Mục này đang tạm khóa"},l.a.createElement("div",{className:"icon-fix"},l.a.createElement(i.Icon,{type:"plus",style:{color:"red"},twoToneColor:"blue"}))),e[j.a.EDUCATION]?l.a.createElement(ie,{_fixData:this._fixData,method:u.c}):l.a.createElement(ne,null))),l.a.createElement(i.Col,{xs:24,sm:24,md:12,lg:9,xl:8,xxl:8},l.a.createElement(i.Collapse,{expandIconPosition:"left",activeKey:this.state.listActiveKeyCV,onChange:e=>{this.setState({listActiveKeyCV:e}),e.length>0?this.setState({activeKeyCV:!0}):this.setState({activeKeyCV:!1})}},l.a.createElement(Fe,{header:this.props.personalInfo.personalInfo.cvUrl?"Sửa CV cá nhân":"CV cá nhân",key:"1",extra:this.state.activeKeyCV?l.a.createElement(i.Icon,{type:"caret-up"}):l.a.createElement(i.Icon,{type:"edit"}),showArrow:!1},l.a.createElement(Oe.a,{onCallSuccess:e=>this.setState({cvUrl:e},()=>this.forceUpdate())})),t||this.props.personalInfo.personalInfo.cvUrl?l.a.createElement(i.Affix,{offsetTop:-105,offsetBottom:5},l.a.createElement(xe,{cvUrl:t||this.props.personalInfo.personalInfo.cvUrl})):null)),l.a.createElement(i.Col,{xs:0,sm:0,md:0,lg:0,xl:3,xxl:3},l.a.createElement(i.Anchor,{showInkInFixed:!0,style:{marginRight:-80,padding:"5px",marginLeft:"5px",backgroundColor:"rgb(0,0,0,0)",fontWeight:500},className:"hidden-mobile"},l.a.createElement(Te,{href:"#person",title:"Hồ sơ cá nhân"}),l.a.createElement(Te,{href:"#picture",title:"Ảnh CMND"}),l.a.createElement(Te,{href:"#description",title:"Mục tiêu nghề nghiệp"}),l.a.createElement(Te,{href:"#skills",title:"Kỹ năng mềm"}),l.a.createElement(Te,{href:"#tools",title:"Công cụ chuyên môn"}),l.a.createElement(Te,{href:"#languageSkill",title:"Kỹ năng ngôn ngữ"}),l.a.createElement(Te,{href:"#experience",title:"Kinh nghiệm"}),l.a.createElement(Te,{href:"#education",title:"Học vấn"})))))))}}t.default=Object(s.connect)(e=>({isAuthen:e.AuthState.isAuthen,personalInfo:e.FullPersonalInfo,dataRedux:e}),e=>({getData:(t,a)=>e({type:g.b.PERSON_INFO.GET_FULL_PERSON_INFO,setActiveKeyCV:t,setActiveKeyCV2:a})}))(Re)},63:function(e,t,a){"use strict";a.d(t,"a",(function(){return n}));const n=e=>{var t=new Date(e);return t.getDate()+"/"+(t.getMonth()+1)+"/"+t.getFullYear()}},90:function(e,t,a){},91:function(e,t,a){},92:function(e,t,a){"use strict";(function(e){var n=a(4),l=a.n(n),s=a(63),i=a(19),r=a(39),c=a(60),o=a(11),m=a(53),h=a.n(m),d=a(54),p=a.n(d),u=(a(55),a(2)),g=a(17),E=a.n(g);t.a=Object(i.connect)(e=>({personalInfo:e.FullPersonalInfo.personalInfo}),null)((function(t){const[a,n]=l.a.useState(null),[i,m]=l.a.useState(null),[d,g]=l.a.useState(null);let[f,y]=l.a.useState(!1);const[v,C]=l.a.useState({unit:"%",width:30,aspect:1}),[b,_]=l.a.useState(t.personalInfo.avatarUrl),N=l.a.useRef(null),[S,x]=l.a.useState(""),I=l.a.useRef(null),[k,w]=l.a.useState(null),[D,O]=l.a.useState(0),L=l.a.useCallback(e=>{let t=new FileReader;t.onload=function(e){_(e.target.result)},t.readAsDataURL(e)},[]),T=l.a.useCallback(e=>{N.current=e},[]);function F(e,t){if(!t||!e)return;(function(e,t,a){const n=document.createElement("canvas");return n.width=t,n.height=a,n.getContext("2d").drawImage(e,0,0,e.width,e.height,0,0,t,a),n})(e,t.width,t.height).toBlob(e=>{R(e)},"image/png",1)}l.a.useEffect(()=>{let{personalInfo:e}=t;g(e.coverUrl),m(e.avatarUrl),n(t.personalInfo)},[t]),l.a.useEffect(()=>{if(!k||!I.current||!N.current)return;const e=N.current,t=I.current,a=k,n=e.naturalWidth/e.width,l=e.naturalHeight/e.height,s=t.getContext("2d");t.width=4*a.width,t.height=4*a.height,s.setTransform(4,0,0,4,0,0),s.imageSmoothingEnabled=!1,s.drawImage(e,a.x*n,a.y*l,a.width*n,a.height*l,0,0,a.width,a.height)},[k]);const R=async t=>{if(t){const a=new FormData;a.append(S,t),E.a.put(e.env.REACT_APP_API_HOST+`/api/students/${S}`,a,{headers:u.d,onUploadProgress:e=>{const t=Math.floor(e.loaded/e.total*100);O(t)}}).then(e=>{e&&(r.notification.success({message:"Thành công",description:"Bạn đã  cập nhật ảnh thành công"}),O(0),o.a.AVATAR===S?m(e.data.data.avatarUrl):g(e.data.data.coverUrl))}).catch(e=>{e&&r.notification.warning({message:"Lỗi bất ngờ",description:" Thử làm lại xem sao"})}).finally(()=>{setTimeout(()=>{y(!1)},1e3)})}else r.notification.warning({message:"Cần chọn file",description:"Bạn có cần chọn file để cập nhật"})};return(l.a.createElement("div",{className:"wrapper",id:"person"},l.a.createElement(r.Modal,{title:S===o.a.AVATAR?"Thay đổi ảnh đại diện":"Thay đổi ảnh bìa",visible:f,onCancel:()=>y(!1),onOk:()=>F(I.current,k),destroyOnClose:!0,confirmLoading:0!==D,okText:"Cập nhật",cancelText:"Hủy",children:l.a.createElement("form",null,l.a.createElement("input",{id:"img-set",type:"file",accept:".jpg,.png",style:{margin:10},onChange:e=>L(e.target.files[0])}),l.a.createElement(r.Progress,{size:"small",percent:D&&parseInt(D.toString())}),l.a.createElement("div",{className:"test",style:{height:300,overflowX:"auto",marginTop:5}},b?l.a.createElement(p.a,{src:b,onImageLoaded:T,crop:{...v,aspect:o.a.AVATAR===S?1:16/9},onChange:e=>C(e),onComplete:e=>w(e)}):l.a.createElement("label",{htmlFor:"img-set",style:{padding:20,width:"100%",margin:0}},l.a.createElement(r.Empty,{description:l.a.createElement("b",null,"Nhấp vào để thêm ảnh")}))),l.a.createElement("div",null,l.a.createElement("canvas",{ref:I,style:{width:k?k.width:0,height:k?k.height:0,display:"none"}})))}),l.a.createElement("div",{className:"avatar"},l.a.createElement("div",{className:"cover-url"},l.a.createElement("div",{style:{height:"25vh",width:"100%",marginBottom:"10px",borderRadius:"2px"},className:"small-image"},l.a.createElement(h.a,{small:d||o.a.DEFAULT_IMAGE,large:d||o.a.DEFAULT_IMAGE}))),l.a.createElement("div",{className:"img-modal-show"},l.a.createElement(h.a,{small:i||o.a.DEFAULT_IMAGE,large:i||o.a.DEFAULT_IMAGE}))),l.a.createElement(r.Tooltip,{title:"Cập nhật ảnh đại diện",placement:"right"},l.a.createElement("div",{className:"up-avatar-image",onClick:()=>{x(o.a.AVATAR),y(!0)}},l.a.createElement(r.Icon,{type:"camera",theme:"filled"}))),l.a.createElement("div",{className:"up-cover-image",onClick:()=>{x(o.a.COVER),y(!0)}},l.a.createElement(r.Icon,{type:"camera",theme:"filled"}),l.a.createElement("b",null,"Thay đổi ảnh bìa")),l.a.createElement("div",{className:"short-profile"},l.a.createElement("ul",null,l.a.createElement("li",{className:"profile-info",style:{fontSize:"1.9em",fontWeight:"bold",marginBottom:10}},a&&a.lastName+" "+a.firstName),l.a.createElement(c.f,null,l.a.createElement(r.Icon,{type:"share-alt"}),"Trạng thái:",a&&!0===a.isLookingForJob?l.a.createElement("b",null," Đang tìm việc"):l.a.createElement("b",null," Đã có công việc")),l.a.createElement(c.f,null,l.a.createElement(r.Icon,{type:"reconciliation"}),"Ngày sinh:"," ",a&&-1!==a.birthday?Object(s.a)(a&&a.birthday):"_"),l.a.createElement(c.f,null,l.a.createElement(r.Icon,{type:a&&"MALE"===a.gender?"man":"woman"}),"Giới tính:"," ",a&&"MALE"===a.gender?"Nam":"Nữ"),l.a.createElement(c.f,{copy:a&&a.addres},l.a.createElement(r.Icon,{type:"environment"}),"Địa chỉ:"," "," ",a&&a.address?a.address:"_"),l.a.createElement(c.f,{copy:a&&a.email},l.a.createElement(r.Icon,{type:"mail"}),"Email:"," ",a&&a.email),l.a.createElement(c.f,{copy:a&&a.phone},l.a.createElement(r.Icon,{type:"phone"}),"Điện thoại liên hệ:"," ",a&&a.phone?a.phone:"_"),l.a.createElement(c.f,{copy:a&&a.identityCard},l.a.createElement(r.Icon,{type:"idcard"}),"Số CMND:",a&&a.identityCard?a.identityCard:"_"),l.a.createElement(c.f,{copy:a&&a.studentCode},l.a.createElement(r.Icon,{type:"idcard"}),"Mã sinh viên :"," ",a&&a.studentCode?a.studentCode:"_"),l.a.createElement(c.f,null,l.a.createElement(r.Icon,{type:"database"}),"Ngày tạo:"," ",a&&(P=a.createdDate,(M=new Date(P)).getDate()+"/"+(M.getMonth()+1)+"/"+M.getFullYear())),l.a.createElement(c.f,null,l.a.createElement(r.Icon,{type:"safety"}),"Hoàn thiện hồ sơ:"," ",a&&a.completePercent," %",l.a.createElement(r.Progress,{percent:a?a.completePercent:0}))))));var P,M}))}).call(this,a(14))},93:function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return m}));var n=a(4),l=a.n(n),s=a(17),i=a.n(s),r=(a(94),a(39)),c=a(9),o=a(2);const m=t=>{const a=Object(n.useRef)(),[s,m]=Object(n.useState)([]),[h,d]=Object(n.useState)([]),[p,u]=Object(n.useState)([]),[g,E]=Object(n.useState)(0);Object(n.useEffect)(()=>{let e=s.reduce((e,t)=>e.find(e=>e.name===t.name)?e:e.concat([t]),[]);d([...e])},[s]);const f=e=>{e.preventDefault()},y=e=>{for(let t=0;t<1;t++)v(e[t])?m(a=>[...a,e[t]]):(e[t].invalid=!0,m(a=>[...a,e[t]]),u(a=>[...a,e[t]]))},v=e=>{console.log(e.type);return-1!==["application/pdf"].indexOf(e.type)};return l.a.createElement("div",{className:"drag-cv"},l.a.createElement("div",{className:"ant-upload ant-upload-drag",onDragOver:e=>{f(e)},onDragEnter:e=>{f(e)},onDragLeave:e=>{f(e)},onDrop:e=>{f(e);const t=e.dataTransfer.files;t.length&&y(t)},onClick:()=>{a.current.click()}},l.a.createElement("p",{className:"ant-upload-drag-icon"},l.a.createElement(r.Icon,{type:"inbox"})),l.a.createElement("p",{className:"ant-upload-text"},"Thêm hoặc kéo thả CV vào đây"),l.a.createElement("p",{className:"ant-upload-hint"},"Chỉ hỗ trợ cho file PDF"),l.a.createElement("p",{className:"ant-upload-hint"},"(dung lượng 0-50 MB)"),l.a.createElement("input",{ref:a,className:"file-input",type:"file",accept:".pdf",multiple:!1,onChange:()=>{a&&a.current&&a.current.files&&a.current.files.length>0&&y(a.current.files)}})),l.a.createElement(r.Progress,{percent:g}),l.a.createElement("div",{className:"file-display-container"},h.map((e,t)=>{return l.a.createElement("div",{className:"file-status-bar",key:t},l.a.createElement("div",{className:"file-type-logo"}),l.a.createElement("div",{className:"file-type"},(a=e.name).substring(a.lastIndexOf(".")+1,a.length)||a),l.a.createElement("span",{className:`file-name ${e.invalid?"file-error":""}`},e.name),l.a.createElement(r.Icon,{type:"close",style:{fontSize:10},theme:"twoTone",twoToneColor:"red",onClick:()=>(e=>{const t=h.findIndex(t=>t.name===e),a=s.findIndex(t=>t.name===e),n=p.findIndex(t=>t.name===e);h.splice(t,1),s.splice(a,1),d([...h]),m([...s]),-1!==n&&(p.splice(n,1),u([...p]))})(e.name)}));var a})),h&&h.length>0?l.a.createElement(r.Button,{type:"primary",icon:"save",onClick:()=>(async()=>{if(h[0]){const a=new FormData;a.append("file",h[0]),i.a.put(e.env.REACT_APP_API_HOST+c.p,a,{headers:o.d,onUploadProgress:e=>{const t=Math.floor(e.loaded/e.total*100);E(t),100===t&&(setTimeout(()=>{E(0)},2e3),d([]),m([]),u([]))}}).then(e=>{if(e){r.notification.success({message:"Tải lên CV thành công"}),d([]);let a=(new Date).getTime();t.onCallSuccess(e.data.data.downloadUrl+`?time=${a}`)}}).catch(e=>{e&&r.notification.warning({message:"Lỗi bất ngờ",description:" Thử làm lại xem sao"})})}else r.notification.warning({message:"Lỗi trống phải ",description:"Bạn cần phải chọn ít nhất 1 phải trước khi upload"})})()},"Tải lên CV",h&&h.length>0&&l.a.createElement("span",{className:"file-size"},"( ",(e=>{if(0===e)return"0 Bytes";const t=Math.floor(Math.log(e)/Math.log(1024));return parseFloat((e/Math.pow(1024,t)).toFixed(2))+" "+["Bytes","KB","MB","GB","TB"][t]})(h[0].size)," )")):null)}}).call(this,a(14))},94:function(e,t,a){}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,