(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{100:function(e,t,a){},121:function(e,t,a){"use strict";a.r(t);var l=a(4),s=a.n(l),o=a(61),i=a(39),n=a(19),r=a(64),p=a(56),c=a.n(p),m=a(0),h=a(8),d=a(65),g=a(41),b=a.n(g),u=a.p+"42cb4828b0b83883ba4e303a71e1c78e.jpg",y=a(62),E=a(40),j=a(68);function x(e){let{loading:t,listResult:a,isSearchEvent:l,param:o}=e;return(s.a.createElement("div",{className:"result"},t?s.a.createElement("div",{className:"loading"},s.a.createElement(i.Spin,null)):a.length>0?a.map((e,t)=>{let a=e.jobTitle;return a&&(a=a.toLowerCase()),s.a.createElement(i.Row,{key:t,className:"result-item"},s.a.createElement(i.Col,{xs:4,sm:4,md:4,lg:4,xl:4,xxl:4},s.a.createElement(h.Link,{to:`/job-detail/${window.btoa(e.id)}`,target:"_blank"},s.a.createElement("div",{className:"image-content"},s.a.createElement(h.Link,{to:`/employer/${btoa(e.employerID)}`},s.a.createElement(E.LazyLoadImage,{src:e.employerLogoUrl?e.employerLogoUrl:u,alt:e.employerName})),s.a.createElement("span",{className:e.jobType},"FULLTIME"===e.jobType?"FullTime":null,"PARTTIME"===e.jobType?"Part-Time":null,"INTERNSHIP"===e.jobType?"InternShip":null)))),s.a.createElement(i.Col,{xs:20,sm:20,md:20,lg:20,xl:20,xxl:20,className:"item-content"},s.a.createElement("div",{className:"item-header"},s.a.createElement("h4",null,s.a.createElement(h.Link,{style:{color:"TOP"===e.priority?"red":"black"},to:l?`event-job-detail/${window.btoa(e.id)}${o}`:`/job-detail/${window.btoa(e.id)}${o}`,target:"_blank"},s.a.createElement(j.a,{title:a,name:Object(d.a)(a,60),transform:"uppercase"})),"TOP"===e.priority?s.a.createElement(i.Tooltip,{title:"Công việc hot"},s.a.createElement("span",null," ",s.a.createElement(i.Icon,{type:"fire",twoToneColor:"#eb2f96",style:{color:"red"}}))):null)),s.a.createElement("div",{className:"item-info"},s.a.createElement("div",null,s.a.createElement(h.Link,{to:`/employer/${window.btoa(e.employerID)}${o}`,target:"_blank",className:"name_employer",style:{fontWeight:550}},s.a.createElement(i.Icon,{type:"shop",style:{color:"#168ECD",marginRight:5}}),e.employerName?e.employerName.toUpperCase():null)),s.a.createElement("div",{className:"item-detail"},s.a.createElement(i.Row,{style:{margin:"10px 0px"}},s.a.createElement(i.Col,{xs:24,sm:24,md:10,lg:10,xl:10},s.a.createElement(i.Icon,{type:"calendar",style:{color:"#168ECD"}})," ",s.a.createElement("span",null,"Ngày đăng: ",b()(e.createdDate).format("DD/MM/YY"))),s.a.createElement(i.Col,{xs:24,sm:24,md:12,lg:10,xl:12},s.a.createElement(i.Icon,{type:"calendar",style:{color:"#168ECD"}})," ",s.a.createElement("span",null,"Hết hạn: ",b()(e.finishedDate).format("DD/MM/YY"))),s.a.createElement(i.Col,{xs:24,sm:24,md:10,lg:10,xl:10},s.a.createElement(i.Icon,{type:"environment",style:{color:"#168ECD"}}),s.a.createElement("span",null,"Tỉnh thành: ",e.region.name)),s.a.createElement(i.Col,{xs:24,sm:24,md:14,lg:14,xl:14},s.a.createElement(i.Icon,{type:"dollar",style:{color:"#168ECD"}})," ",s.a.createElement("span",null,"Lương: ",Object(y.a)(e.minSalary,e.minSalaryUnit,e.maxSalary,e.maxSalaryUnit))))))))}):s.a.createElement(i.Empty,{style:{minHeight:"500px",backgroundColor:"white",padding:"8.5vw 0",margin:"0"},description:"Không tìm thấy công việc liên quan"})))}a(100);var T=a(11),I=a(13),f=a.n(I);const{Panel:v}=i.Collapse,D=[{label:"T2",value:T.a.MON},{label:"T3",value:T.a.TUE},{label:"T4",value:T.a.WED},{label:"T5",value:T.a.THU},{label:"T6",value:T.a.FRI},{label:"T7",value:T.a.SAT},{label:"CN",value:T.a.SUN}],S=[{label:"Ca sáng",value:T.a.MOR},{label:"Ca chiều",value:T.a.AFT},{label:"Ca tối",value:T.a.EVN}];class N extends s.a.Component{constructor(e){super(e),this.state={weekDays:null,dayTimes:null}}componentDidMount(){let e=[],t=[];if(this.props.setFilter)Object.keys(this.props.list_day).forEach(t=>{!0===this.props.list_day[t]&&e.push(t)}),Object.keys(this.props.list_shift).forEach(e=>{!0===this.props.list_shift[e]&&t.push(e)});else{let a=f.a.parse(this.props.location.search,{ignoreQueryPrefix:!0});Object.keys(this.props.list_day).forEach(t=>{"true"===a[t]&&e.push(t)}),Object.keys(this.props.list_shift).forEach(e=>{"true"===a[e]&&t.push(e)})}this.setState({weekDays:e,dayTimes:t})}render(){let{weekDays:e,dayTimes:t}=this.state,{loading:a}=this.props;return s.a.createElement(i.Card,{className:"search-more",title:"Lọc theo thời gian",size:"small"},s.a.createElement(i.Collapse,{bordered:!0,defaultActiveKey:["1","2"]},s.a.createElement(v,{header:"Chọn thứ",key:"1"},s.a.createElement(i.Checkbox.Group,{value:e,onChange:e=>{this.setState({weekDays:e})},options:D,defaultValue:null})),s.a.createElement(v,{header:"Chọn ca",key:"2"},s.a.createElement(i.Checkbox.Group,{value:t,onChange:e=>this.setState({dayTimes:e}),options:S,defaultValue:null}))),s.a.createElement(i.Tooltip,{placement:"bottomRight",title:"Áp dụng với PARTTIME"},s.a.createElement(i.Row,null,s.a.createElement(i.Col,{md:12,lg:12,xl:12,xxl:12},s.a.createElement(i.Button,{size:"large",icon:"close",type:"danger",style:{width:"calc(100% - 5px)",color:"white",margin:"10px 0px 0px",border:"solid white 1px"},onClick:()=>{this.setState({weekDays:null,dayTimes:null})},disabled:"PARTTIME"!==this.props.jobType},"Bỏ")),s.a.createElement(i.Col,{md:12,lg:12,xl:12,xxl:12},s.a.createElement(i.Button,{size:"large",icon:"filter",type:"primary",style:{width:"100%",color:"white",margin:"10px 0px 0px",border:"solid white 1px"},onClick:()=>this.props.onChangeShiftsFilter({weekDays:e,dayTimes:t}),disabled:"PARTTIME"!==this.props.jobType},a?s.a.createElement(i.Icon,{type:"loading"}):"Lọc")))))}}var C=Object(n.connect)(e=>({list_day:e.JobResult.filter.list_day,list_shift:e.JobResult.filter.list_shift,setFilter:e.JobResult.setFilter,primaryColor:e.DetailEvent.primaryColor}))(N);class w extends s.a.Component{render(){let{highlightData:e,loadingHlData:t,param:a}=this.props;return(s.a.createElement("div",{className:"hl-job hidden-only-phone"},s.a.createElement("div",{className:"all-hl-job"},s.a.createElement(i.Row,null,e&&e.items&&e.items.map((e,l)=>s.a.createElement(i.Col,{key:l,xs:24,sm:24,md:12,lg:8,xl:8,xxl:8},t?s.a.createElement(i.Skeleton,{key:l,loading:!0,avatar:!0,paragraph:{rows:1},active:!0}):s.a.createElement(i.Tooltip,{title:"Công việc hot",style:{backgroundColor:"white",color:"black"}},s.a.createElement(h.Link,{to:`/job-detail/${window.btoa(e.id)}${a}`,target:"_blank"},s.a.createElement("div",{key:l,className:"item-hl-job"},s.a.createElement("div",{style:{flex:1,padding:"5px 0px"}},e.employerLogoUrl?s.a.createElement(E.LazyLoadImage,{src:e.employerLogoUrl,alt:"works result",height:"60px",width:"60px",style:{objectFit:"contain"}}):s.a.createElement("div",{style:{width:60,height:60,backgroundColor:"#f2f2f2",borderRadius:3,display:"inline-block"}}),"FULLTIME"===e.jobType?s.a.createElement("div",{className:"l_c",style:{display:"inline-block",padding:"0 2px",backgroundColor:"#32A3F9",color:"#fff",fontSize:"0.7em",width:"60px",marginTop:4}},"FullTime"):null,"PARTTIME"===e.jobType?s.a.createElement("div",{className:"l_c",style:{display:"inline-block",padding:"0 2px",backgroundColor:"rgb(0, 179, 60)",color:"#fff",fontSize:"0.7em",width:"60px",marginTop:4}},"Part-Time"):null,"INTERNSHIP"===e.jobType?s.a.createElement("div",{className:"l_c",style:{display:"inline-block",padding:"0 2px",backgroundColor:"rgb(255, 153, 51)",color:"#fff",fontSize:"0.7em",width:"60px",marginTop:4}},"InternShip"):null),s.a.createElement("ul",{style:{flex:4,marginLeft:10,marginBottom:0}},s.a.createElement("li",{style:{marginBottom:5},className:"maxline-2"},s.a.createElement(h.Link,{to:`/job-detail/${window.btoa(e.id)}${a}`,target:"_blank"},s.a.createElement(i.Icon,{type:"fire"})," ",e.jobTitle+" [HOT]")),s.a.createElement("li",{className:"maxline-1"},s.a.createElement(i.Icon,{type:"shop"}),e.employerName),s.a.createElement("li",null,s.a.createElement(i.Icon,{type:"environment"})," ",e.region.name))))))))),s.a.createElement("div",{className:"pagination-result"},s.a.createElement(i.Pagination,{defaultCurrent:1,size:"6",total:e.totalItems,onChange:e=>{this.props.getHighLightJobs(e-1),this.setState({loadingHlData:!0})}}))))}}const{Option:_}=i.Select;class k extends s.a.Component{constructor(e){super(e),this.state={jobType:null,regionID:null,jobNameID:null,isEvent:!1}}componentDidMount(){let e=f.a.parse(this.props.location.search,{ignoreQueryPrefix:!0});this.props.setFilter?(this.props.jobType&&this.setState({jobType:this.props.jobType}),this.props.job_dto&&this.props.job_dto.name&&this.setState({jobNameID:this.props.job_dto.id}),this.props.area&&this.props.area.id&&this.setState({regionID:this.props.area.id})):(e.jobNameID?this.setState({jobNameID:Number(e.jobNameID)}):this.setState({jobNameID:this.props.job_dto.id}),e.regionID?this.setState({regionID:Number(e.regionID)}):this.props.area&&this.props.area.id&&this.setState({regionID:this.props.area.id}),e.jobType?this.setState({jobType:e.jobType}):this.setState({jobType:this.props.jobType}))}render(){let{regions:e,jobNames:t,loading:a,eventName:l,isAuthen:o,primaryColor:n}=this.props,{jobType:r,jobNameID:p,regionID:c,isEvent:m}=this.state;return s.a.createElement("div",{className:"filter-name-job",style:{backgroundColor:n}},s.a.createElement(i.Row,null,s.a.createElement(i.Col,{xs:11,sm:12,md:5,lg:4,xl:4,xxl:5},s.a.createElement(i.Select,{size:"large",showSearch:!0,onChange:e=>{let t={jobType:null,regionID:this.state.regionID,jobNameID:this.state.jobNameID,isEvent:this.state.isEvent};t.jobType=e,this.setState({jobType:e}),this.props.onChangeJobFilter(t)},style:{width:"100%",margin:"5px 0px"},placeholder:"Chọn loại công việc",value:r||void 0},s.a.createElement(_,{key:"1",value:null},"Tất cả"),s.a.createElement(_,{key:"2",value:T.a.FULLTIME},"Fulltime"),s.a.createElement(_,{key:"3",value:T.a.PARTTIME},"Parttime"),s.a.createElement(_,{key:"4",value:T.a.INTERNSHIP},"Internship"))),s.a.createElement(i.Col,{xs:2,sm:0,md:0,lg:0,xl:0,xxl:0}),s.a.createElement(i.Col,{xs:11,sm:12,md:5,lg:4,xl:4,xxl:4},s.a.createElement(i.Select,{size:"large",showSearch:!0,style:{width:"100%",margin:"5px 0px"},placeholder:"Chọn tỉnh thành",value:c&&e.length>0?e.find(e=>e.id===c).name:void 0},s.a.createElement(_,{key:"1",value:"Tất cả ",onClick:()=>{let e={jobType:null,regionID:this.state.regionID,jobNameID:this.state.jobNameID,isEvent:this.state.isEvent};e.regionID=null,this.setState({regionID:null}),this.props.onChangeJobFilter(e)}},"Tất cả"),e.length>0?e.map((t,a)=>s.a.createElement(_,{key:a,id:t.id,value:t.name,onClick:()=>{let a={jobType:null,regionID:this.state.regionID,jobNameID:this.state.jobNameID,isEvent:this.state.isEvent},l=e&&e.filter(e=>t.id===e.id),s=null;l&&l.length>0&&(s=l[0].id),a.regionID=s,this.setState({regionID:s}),this.props.onChangeJobFilter(a)}},t.name)):null)),s.a.createElement(i.Col,{xs:24,sm:12,md:7,lg:o?8:12,xl:o?8:12,xxl:o?7:12},s.a.createElement(i.Select,{size:"large",showSearch:!0,style:{width:"100%",margin:"5px 0px"},placeholder:"Chọn tên công việc",value:p&&t.length>0?t.find(e=>e.id===p).name:void 0},s.a.createElement(_,{key:"1",value:"Tất cả",onClick:()=>{let e={jobType:this.state.jobType,regionID:this.state.regionID,jobNameID:this.state.jobNameID,isEvent:this.state.isEvent};e.jobNameID=null,this.setState({jobNameID:null}),this.props.onChangeJobFilter(e)}},"Tất cả các công việc"),t.length>0?t.map((e,t)=>s.a.createElement(_,{key:t,id:e.name,value:e.name,onClick:()=>{let t={jobType:this.state.jobType,regionID:this.state.regionID,jobNameID:this.state.jobNameID,isEvent:this.state.isEvent};t.jobNameID=e.id,this.setState({jobNameID:e.id}),this.props.onChangeJobFilter(t)}},e.name)):null)),s.a.createElement(i.Col,{xs:24,sm:12,md:6,lg:4,xl:4,xxl:4,style:{display:o?"":"none"}},s.a.createElement(i.Select,{allowClear:!0,size:"large",showSearch:!0,onChange:e=>{let t={jobType:this.state.jobType,regionID:this.state.regionID,jobNameID:this.state.jobNameID,isEvent:this.state.isEvent};t.isEvent=e,this.setState({isEvent:e}),this.props.onChangeJobFilter(t)},style:{width:"100%",margin:"5px 0px"},placeholder:"Chọn nhóm",value:m?l:"Bình thường"},s.a.createElement(_,{key:"1",value:!1},"Tuyển dụng thường"),s.a.createElement(_,{key:"2",value:!0},l))),s.a.createElement(i.Col,{xs:24,sm:12,md:4,lg:4,xl:4,xxl:4},s.a.createElement(i.Button,{size:"large",type:"danger",icon:a?"loading":"search",children:"Tìm",style:{width:"100%",margin:"5px 0px",backgroundColor:"#ff5658",borderColor:"#ff5658",color:"white"},onClick:()=>{}}))))}}var R=Object(n.connect)(e=>({isAuthen:e.AuthState.isAuthen,jobType:e.JobResult.filter.jobType,area:e.JobResult.filter.area,job_dto:e.JobResult.filter.job_dto,setFilter:e.JobResult.setFilter,eventName:e.EventStatusReducer.name,primaryColor:e.DetailEvent.primaryColor}))(k);function J(e){let{numberRs:t}=e;return(s.a.createElement(i.Affix,{offsetTop:0},s.a.createElement("div",{className:"result-filter"},s.a.createElement("div",{className:"sub-filter"},s.a.createElement("p",null,s.a.createElement("label",{style:{paddingLeft:10}},s.a.createElement("label",null,"Đã tìm thấy"),s.a.createElement("label",{style:{color:"red",padding:"0 3px 0 4px"}},s.a.createElement("b",null,t)),s.a.createElement("label",{className:"text-icon"},"công việc")))))))}var L=a.p+"f8e542d820384152af7852f48cd8f397.jpg";function F(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}const O=new c.a;class H extends s.a.Component{constructor(e){super(e),F(this,"_handleIndex",(e,t)=>{let a=this.state.body;"FULLTIME"!==this.props.jobType&&"INTERSHIP"!==this.props.jobType||(a.jobShiftFilter={weekDays:null,dayTimes:null}),Object(r.a)(0,0),localStorage.setItem("paging",JSON.stringify({pageIndex:e-1,pageSize:t})),this.state.isSearchEvent?this.props.getEventJobResults(e-1,t,a):this.props.getJobResults(e-1,t,a),this.setState({pageIndex:e-1,pageSize:t}),this._callLoading()}),F(this,"_callLastWord",()=>{let{list_last_word:e}=this.state,t=O.get("list_last_word");t&&(e=t),this.setState({list_last_word:e})}),F(this,"_callLoading",()=>{this.setState({loading:!0}),setTimeout(()=>{this.setState({loading:!1})},250)}),F(this,"_callJob",async()=>{let{body:e,list_last_word:t,pageIndex:a,pageSize:l}=this.state;O.set("list_last_word",t,{path:"/result"}),this.state.isSearchEvent?this.props.getEventJobResults(a,l,e):this.props.getJobResults(a,l,e),this._callLoading()}),F(this,"onChangeJobFilter",async e=>{let t=f.a.parse(this.props.location.search),{body:a,isSearchEvent:l}=this.state;l=e.isEvent,"PARTTIME"!==e.jobType&&(a.jobShiftFilter={gender:null,weekDays:null,dayTimes:null}),e.jobType?(a.jobType=e.jobType,t.jobType=e.jobType):a.jobType=null,t.jobNameID=e.jobNameID,null!==e.jobNameID&&void 0!==e.jobNameID&&0!==e.jobNameID?a.jobNameIDs=[e.jobNameID]:a.jobNameIDs=[],t.regionID=e.regionID,a.jobLocationFilter.regionID=e.regionID,this.props.history.replace("?"+f.a.stringify(t)),await this.setState({body:a,pageIndex:0,isSearchEvent:l}),await this._callJob()}),F(this,"onChangeShiftsFilter",async e=>{let{body:t}=this.state,a=f.a.parse(this.props.location.search,{});t.jobShiftFilter.weekDays=e.weekDays,t.jobShiftFilter.dayTimes=e.dayTimes,Object.keys(this.props.list_day).forEach(t=>{e.weekDays.includes(t)}),Object.keys(this.props.list_shift).forEach(t=>{e.dayTimes.includes(t)}),this.props.history.replace("?"+f.a.stringify(a)),await this.setState({body:t}),await this._callJob()}),this.state={loading:!1,search_word:"",jobNameID:null,dataSource:[],pageIndex:0,pageIndexHighLight:-1,pageSize:0,show_job:!1,region:JSON.parse(localStorage.getItem("region")),job:JSON.parse(localStorage.getItem("job")),list_last_word:[],body:{employerID:null,excludedJobIDs:null,jobNameIDs:null,jobType:null,shuffle:!1,jobPriorityFilter:null,jobShiftFilter:{gender:null,weekDays:null,dayTimes:null},jobLocationFilter:{regionID:null,lat:null,lon:null}},isSearchEvent:!0}}componentDidMount(){let{search_word:e,body:t,pageIndex:a,pageSize:l}=this.state,{regions:s,jobNames:o}=this.props;0===s.length&&this.props.getListRegions(),0===o.length&&this.props.getListJobNames(e),this.props.getHighLightData(0),this._callLastWord();let i,n,r,p=f.a.parse(this.props.location.search),c=[],m=[];this.props.setFilter?(this.props.jobType&&(i=this.props.jobType),this.props.job_dto&&this.props.job_dto.name&&(n=this.props.job_dto.id),this.props.area&&this.props.area.id&&(r=this.props.area.id),Object.keys(this.props.list_day).forEach(e=>{!0===this.props.list_day[e]&&c.push(e)}),Object.keys(this.props.list_shift).forEach(e=>{!0===this.props.list_shift[e]&&m.push(e)})):(n=p.jobNameID?Number(p.jobNameID):this.props.job_dto.id,r=p.regionID?Number(p.regionID):this.props.area&&this.props.area.id?this.props.area.id:null,i=p.jobType?p.jobType:this.props.jobType,Object.keys(this.props.list_day).forEach(e=>{"true"===p[e]&&c.push(e)}),Object.keys(this.props.list_shift).forEach(e=>{"true"===p[e]&&m.push(e)})),this.props.isAuthen||this.setState({isSearchEvent:!1}),this.setState({body:{...t,jobType:i,jobNameIDs:n?[n]:null,jobLocationFilter:{...t.jobLocationFilter,regionID:r||null},jobShiftFilter:{...t.jobShiftFilter,weekDays:c.length>0?c:null,dayTimes:m.length>0?m:null}},region:this.props.area},()=>{this.props.setFilter||(this.state.isSearchEvent&&this.props.isAuthen?this.props.getEventJobResults(a,l,this.state.body):this.props.getJobResults(a,l,this.state.body))})}static getDerivedStateFromProps(e,t){if(e.match.param){let{body:a}=t;t.isSearchEvent?e.getEventJobResults(t.pageIndex,t.pageSize,a):e.getJobResults(t.pageIndex,t.pageSize,a)}return null}render(){const{region:e,body:t,isSearchEvent:a}=this.state,{results:l,highlightData:n,jobNames:r,regions:p,loadingHlData:c,loading:m,param:h}=this.props,d=l.items;return s.a.createElement(o.a,null,s.a.createElement(i.Row,{className:"content"},s.a.createElement(i.Col,{xs:0,sm:0,md:0,lg:0,xl:0,xxl:2}),s.a.createElement(i.Col,{xs:24,sm:24,md:24,lg:24,xl:24,xxl:24},s.a.createElement("div",{className:"search-result"},s.a.createElement(i.Row,null,s.a.createElement(w,{loadingHlData:c,highlightData:n,isSearchEvent:a,getHighLightJobs:e=>{this.props.getHighLightData(e,6)},param:h})),s.a.createElement("div",{className:"search-tab"},s.a.createElement(R,{loading:m,jobNames:r,regions:p,onChangeJobFilter:this.onChangeJobFilter,location:this.props.location})),s.a.createElement(J,{numberRs:l.totalItems,regionName:e&&e.name,totalJobs:e&&e.totalJobs}),s.a.createElement(i.Row,null,s.a.createElement(i.Col,{xs:24,sm:24,md:16,lg:16,xl:17,xxl:19},s.a.createElement(x,{loading:m,listResult:d,isSearchEvent:a,param:h}),s.a.createElement("div",{style:{paddingTop:10,textAlign:"center"}},s.a.createElement(i.Pagination,{defaultCurrent:1,pageSize:l.pageSize,total:l.totalItems,onChange:this._handleIndex,current:this.state.pageIndex+1,onShowSizeChange:(e,t)=>this._handleIndex(e,t)}))),s.a.createElement(i.Col,{xs:0,sm:0,md:8,lg:8,xl:7,xxl:5},s.a.createElement(C,{loading:m,onChangeShiftsFilter:this.onChangeShiftsFilter,jobType:t.jobType,location:this.props.location}),s.a.createElement(E.LazyLoadImage,{style:{boxShadow:"0 4px 8px 0 rgba(0, 0, 0, 0.03), 0 6px 20px 0 rgba(0, 0, 0, 0.03)",marginLeft:11,width:"calc(100% - 12px)"},alt:"banner",src:L}))))),s.a.createElement(i.Col,{xs:0,sm:0,md:0,lg:0,xl:0,xxl:2})))}}t.default=Object(n.connect)(e=>({results:e.JobResult.result,loading:e.JobResult.loading,highlightData:e.HighLightResult.data,loadingHlData:e.HighLightResult.loadingHlData,isAuthen:e.isAuthen,jobNames:e.JobNames.items,regions:e.Regions.items,isMobile:e.MobileState.isMobile,jobType:e.JobResult.filter.jobType,area:e.JobResult.filter.area,setFilter:e.JobResult.setFilter,job_dto:e.JobResult.filter.job_dto,list_day:e.JobResult.filter.list_day,list_shift:e.JobResult.filter.list_shift,param:e.DetailEvent.param}),e=>({getJobResults:(t,a,l)=>e({type:m.b.JOB_RESULT.GET_JOB_RESULT,pageIndex:t,pageSize:a,body:l}),getEventJobResults:(t,a,l)=>e({type:m.b.EVENT.JOB.SEARCH,pageIndex:t,pageSize:a,body:l}),getHighLightData:(t,a)=>e({type:m.b.HIGH_LIGHT.GET_HIGH_LIGHT_DATA,pageIndex:t,pageSize:a}),getListJobNames:t=>e({type:m.b.JOB_NAMES.GET_JOB_NAMES,name:t}),getListRegions:t=>e({type:m.b.REGIONS.GET_REGIONS,name:t}),setFilterJobType:(t,a)=>e({type:m.a.JOB_RESULT.SET_FILTER_JOB_TYPE,jobType:t,show_days:a})}))(H)},62:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return o}));const l=e=>e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."),s=(e,t,a,s)=>{let o="";return e&&(o+=l(e),t&&t!==s&&(o+="/"+t)),a&&(o&&(o+=" - "),o+=l(a),s&&(o+="/"+s)),o||(o="Thỏa thuận"),o},o=(e,t,a)=>s(e,null,t,a)},68:function(e,t,a){"use strict";a.d(t,"a",(function(){return o}));var l=a(4),s=a.n(l);function o(e){let t="";e.placement&&(t=e.placement);return s.a.createElement("div",{className:`config-tooltip ${t}`,style:{textTransform:e.transform?e.transform:""}},(e.placement,s.a.createElement(s.a.Fragment,null,s.a.createElement("div",{className:"tooltiptext"},e.title),e.name)))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,