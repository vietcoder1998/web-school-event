(window.webpackJsonp=window.webpackJsonp||[]).push([[4,6],{123:function(e,t,a){"use strict";a.r(t),a.d(t,"_checkGender",(function(){return z}));var l=a(4),n=a.n(l),i=a(39),r=a(19),s=a(6),o=a(5),c=a(9),m=a(3),d=a(2),g=a(43),h=a.n(g),p=a(64),E=a(67),u=a(61),y=a(60),b=a(0),v=a(41),f=a.n(v),_=a(70),x=a(62),S=a(8),w=a(80);class N extends l.PureComponent{render(){let{jobDetail:e,similarJob:t,is_loading_similar:a,paging:l,param:r}=this.props;return(n.a.createElement("div",{className:"job-detail"},n.a.createElement(i.Row,{className:"des-job",style:{backgroundColor:"white"}},n.a.createElement(i.Col,{xs:24,sm:24,md:24,lg:15,xl:15},n.a.createElement("div",{className:"description-job "},n.a.createElement("h6",null,"Thông tin công việc"),n.a.createElement("div",{style:{padding:10,whiteSpace:"pre-line",color:"#000"},dangerouslySetInnerHTML:{__html:e&&e.description}}))),n.a.createElement(i.Col,{xs:24,sm:24,md:24,lg:9,xl:9},n.a.createElement("div",{className:"short-info"},n.a.createElement("h6",null,"Thông tin sơ lược"),n.a.createElement("ul",{style:{marginBottom:"5px"}},n.a.createElement("li",{className:"d_j_t"},n.a.createElement(i.Icon,{type:"calendar",style:{color:"rgb(74, 74, 74)"}}),n.a.createElement(y.c,{value:"Ngày đăng: "}),n.a.createElement("label",{style:{fontSize:"0.95em",color:"#000"}}," ",e&&f()(e.createdDate).format("DD/MM/YYYY"))),n.a.createElement("li",{className:"d_j_t"},n.a.createElement(i.Icon,{type:"calendar",style:{color:"rgb(74, 74, 74)"}}),n.a.createElement(y.c,{value:"Ngày hết hạn: "}),n.a.createElement("label",{style:{fontSize:"0.95em",color:"#000"}}," ",e&&f()(e.expirationDate).format("DD/MM/YYYY"))))))),n.a.createElement(i.Row,null,n.a.createElement(i.Col,{xs:24,sm:24,md:24,lg:24,xl:24},n.a.createElement(i.Row,{className:"time-job "},n.a.createElement("h6",null,"Ca làm việc"),e.shifts&&e.shifts?e.shifts.map((e,t)=>n.a.createElement(i.Col,{key:t,xs:24,sm:24,md:12,lg:12,xl:12,xxl:12},n.a.createElement("div",{className:"time-content",style:{border:"1px solid rgb(119, 197, 255)",borderRadius:"3px"}},n.a.createElement("p",{style:{color:"black",fontSize:"1.1em",borderBottom:"1px solid rgb(119, 197, 255)",paddingBottom:5,paddingLeft:"15px",backgroundColor:"rgb(226, 242, 254)",margin:"0",paddingTop:5}},"Ca số ",t+1),n.a.createElement("p",null,n.a.createElement(i.Icon,{type:"clock-circle",style:{color:"#168ECD"}})," "+e.startTime+"-"+e.endTime),n.a.createElement("p",null,n.a.createElement(i.Icon,{type:"dollar",style:{color:"#168ECD"}}),Object(x.b)(e.minSalary,e.maxSalary,e.unit)),n.a.createElement("div",{className:"week-day"},_.a.map((t,a)=>{if(!0===e[t]){let e="T"+(a+2);return 6===a&&(e="CN"),n.a.createElement("label",{key:a,className:"time-span"},e)}{let e="T"+(a+2);return 6===a&&(e="CN"),n.a.createElement("label",{key:a,className:"time-span-unselected"},e)}})),e.genderRequireds[0]?Object(w._checkGender)(e.genderRequireds[0]):null,e.genderRequireds[1]?Object(w._checkGender)(e.genderRequireds[1]):null))):n.a.createElement(y.g,{msg:"Ca làm việc không tồn tại"})))),n.a.createElement(i.Row,null,n.a.createElement(i.Col,{xs:24,sm:24,md:24,lg:24,xl:24},n.a.createElement("div",{className:"skills-job-detail "},n.a.createElement("h6",null,"Kĩ năng khác"),n.a.createElement("div",{style:{padding:15}},e.requiredSkills&&e.requiredSkills.length>0?e.requiredSkills.map((e,t)=>n.a.createElement("label",{key:t,className:"skills-detail"},e.name)):n.a.createElement(y.g,{msg:"Ứng viên không đòi hỏi kỹ năng khác"}))))),n.a.createElement("div",{className:"company-more "},n.a.createElement("h6",null," Công việc tương tự"),n.a.createElement(i.Row,null,n.a.createElement("div",{className:"company-job-more a_c"},t&&t.items?t.items.map((e,t)=>n.a.createElement(i.Col,{key:t,xs:24,sm:12,md:12,lg:12,xl:12},a?n.a.createElement(i.Skeleton,{loading:!0,avatar:!0,paragraph:{rows:1}}):n.a.createElement("div",{className:"item-job"},n.a.createElement("div",{style:{flex:3,display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center"}},n.a.createElement(i.Avatar,{shape:"square",src:e.employerLogoUrl,size:60}),n.a.createElement(y.e,{width:"60px",fontSize:"0.7em"},e&&e.jobType)),n.a.createElement("div",{style:{flex:9}},n.a.createElement("p",{style:{textAlign:"left",fontSize:"1.1em",fontWeight:500},className:"info-silimar-job"},n.a.createElement(S.Link,{to:`/job-detail/${window.btoa(e.id)}${r}`,target:"_blank"},e.jobTitle)),n.a.createElement("p",{style:{textAlign:"left"},className:"info-silimar-job"},n.a.createElement("span",null,n.a.createElement(i.Icon,{type:"environment",style:{marginRight:3}}),e.address)))))):n.a.createElement(i.Empty,{description:"Không tìm thấy công việc nào"}))),n.a.createElement("div",{style:{textAlign:"center"}},n.a.createElement(i.Pagination,{defaultCurrent:1,total:l,onChange:e=>this.props._getSimilarJob(e)})))))}}function k(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}const{TextArea:C}=i.Input,D=["terrible","bad","normal","good","wonderful"];class j extends n.a.PureComponent{constructor(...e){super(...e),k(this,"state",{visible:!1,workingEnvironmentRating:0,salaryRating:0,comment:"",confirmLoading:!1}),k(this,"_handleModal",()=>{let{visible:e}=this.state;this.setState({visible:!e})}),k(this,"_handleWorkingEnvironmentRating",e=>{this.setState({workingEnvironmentRating:e})}),k(this,"_handleSalaryRating",e=>{this.setState({salaryRating:e})}),k(this,"_createRequest",async()=>{let{workingEnvironmentRating:e,salaryRating:t,comment:a}=this.state,{id:l}=this.props.employerDetail,n={workingEnvironmentRating:e,salaryRating:t,comment:a.trim()};await this.setState({confirmLoading:!0}),await Object(s.a)(o.c,n,`${c.j}/${l}/ratings`,m.c,d.a,null,!0),await this.setState({confirmLoading:!1})})}render(){let{employerDetail:e,employerMoreJob:t,paging:a,is_loading_more:l,param:r}=this.props,{visible:s,confirmLoading:o,workingEnvironmentRating:c,salaryRating:m}=this.state;return n.a.createElement(n.a.Fragment,null,n.a.createElement(i.Modal,{title:"ĐÁNH GIÁ NHÀ TUYỂN DỤNG",visible:s,onOk:this._handleModal,footer:[n.a.createElement(i.Button,{key:"cancel",onClick:this._handleModal,type:"danger"},"Huỷ"),n.a.createElement(i.Button,{key:"ok",type:"primary",onClick:this._createRequest},n.a.createElement(i.Icon,{type:"edit"}),"Đánh giá")],confirmLoading:o,onCancel:this._handleModal},n.a.createElement("div",{className:"employer-rating_popup"},n.a.createElement("div",{className:"employer-rating_value"},n.a.createElement("p",null,"Môi trường làm việc"),n.a.createElement("div",{className:"star-rating"},n.a.createElement(i.Rate,{tooltips:D,onChange:this._handleWorkingEnvironmentRating,value:c})),n.a.createElement("p",null,"Hỗ trợ lương thưởng"),n.a.createElement("div",{className:"star-rating"},n.a.createElement(i.Rate,{tooltips:D,onChange:this._handleSalaryRating,value:m}))),n.a.createElement(C,{maxLength:160,rows:4,onChange:e=>this.setState({comment:e.target.value}),placeholder:"Viết nhận xét về nhà tuyển dụng (vui lòng không sử dụng các từ ngữ thô tục)"}))),n.a.createElement("div",{className:"job-detail"},n.a.createElement("div",{className:"all-rating "},n.a.createElement("div",{className:"company-header"},n.a.createElement("h6",null,"Đánh giá")),n.a.createElement(i.Row,null,n.a.createElement(i.Col,{xs:12,className:"b_r"},n.a.createElement("div",{className:"rating b_b"},n.a.createElement("p",{style:{fontSize:"1.05em",color:"black"}},"Môi trường làm việc "),n.a.createElement("div",{className:"star-rating"},n.a.createElement(i.Rate,{disabled:!0,defaultValue:e.rating&&e.rating.workingEnvironmentRating,style:{fontSize:"0.9rem"}})),n.a.createElement("span",null,n.a.createElement("label",null,n.a.createElement(i.Icon,{type:"user",style:{fontSize:"12px"}})),e.rating&&e.rating.ratingCount," lượt đánh giá"))),n.a.createElement(i.Col,{xs:12},n.a.createElement("div",{className:"rating b_b"},n.a.createElement("p",{style:{fontSize:"1.05em",color:"black"}},"Đãi ngộ nhân viên"),n.a.createElement("div",{className:"star-rating"},n.a.createElement(i.Rate,{disabled:!0,defaultValue:e.rating&&e.rating.salaryRating,style:{fontSize:"0.9rem"}})),n.a.createElement("span",null,n.a.createElement("label",null,n.a.createElement(i.Icon,{type:"user",style:{fontSize:"12px"}})),e.rating&&e.rating.ratingCount," lượt đánh giá"))))),n.a.createElement("div",{className:"company-info"},n.a.createElement("h6",null,"Thông tin liên hệ"),n.a.createElement("p",null,n.a.createElement(i.Icon,{type:"home",style:{color:"#168ECD"}}),"Tên nhà tuyển dụng: ",e.employerName?e.employerName:n.a.createElement(y.g,null)),n.a.createElement("p",null,n.a.createElement(i.Icon,{type:"dollar",style:{color:"#168ECD"}})," Mã số thuế: ",e.taxCode?e.taxCode:n.a.createElement(y.g,null)),n.a.createElement("p",null,n.a.createElement(i.Icon,{type:"environment",style:{color:"#168ECD"}}),"  Địa chỉ: ",e.address?e.address:n.a.createElement(y.g,null)),n.a.createElement("p",null,n.a.createElement(i.Icon,{type:"mail",style:{color:"#168ECD"}}),"  Mail: ",e.email?e.email:n.a.createElement(y.g,null)),n.a.createElement("p",{style:{textAlign:"right"}})),n.a.createElement("div",{className:"company-description b_b"},n.a.createElement("h6",null,"Mô tả sơ lược"),n.a.createElement("p",{style:{padding:"15px",whiteSpace:"pre-line",color:"rgb(0, 0, 0)"}},e.description?e.description:n.a.createElement(y.g,null))),n.a.createElement("div",{className:"company-more "},n.a.createElement("h6",null," Công việc đang tuyển"),n.a.createElement(i.Row,null,n.a.createElement("div",{className:"company-job-more a_c"},t.items&&t?t.items.map((e,t)=>n.a.createElement(i.Col,{key:t,xs:24,sm:12,md:12,lg:12,xl:12},l?n.a.createElement(i.Skeleton,{loading:!0,avatar:!0,paragraph:{rows:1}}):n.a.createElement("div",{className:"item-job"},n.a.createElement("div",{style:{flex:3,display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center"}},n.a.createElement(i.Avatar,{shape:"square",src:e.employerLogoUrl,size:60}),n.a.createElement(y.e,{width:"60px",fontSize:"0.7em"},e&&e.jobType)),n.a.createElement("div",{style:{flex:9}},n.a.createElement("p",{style:{textAlign:"left",fontSize:"1.1em",fontWeight:500},className:"info-silimar-job"},n.a.createElement(S.Link,{to:`/job-detail/${window.btoa(e.id)}${r}`,target:"_blank"},e.jobTitle)),n.a.createElement("p",{style:{textAlign:"left"},className:"info-silimar-job"},n.a.createElement("span",null,n.a.createElement(i.Icon,{type:"environment",style:{marginRight:3}}),e.address)))))):n.a.createElement(i.Empty,{description:"Không tìm thấy công việc nào"}))),n.a.createElement("div",{className:"pagination-job a_c"},n.a.createElement(i.Pagination,{defaultCurrent:1,total:a,onChange:e=>this.props._getMoreJob(e)})))))}}var I=a(12),R=a.n(I),T=a(11),M=a(13),L=a.n(M),J=a(66),q=a(40);function O(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}const{TabPane:A}=i.Tabs,{TextArea:B}=i.Input,z=e=>{if(e.gender)switch(e.gender){case"BOTH":return n.a.createElement("div",null,n.a.createElement("p",null,n.a.createElement("label",{style:{marginBottom:0,marginRight:3}},n.a.createElement(i.Icon,{type:"man",style:{color:"rgb(21, 148, 255)"}}),"Nam &"," "),n.a.createElement("label",{style:{marginBottom:0,marginRight:5}},n.a.createElement(i.Icon,{type:"woman",style:{color:"#ff395c"}}),"Nữ"," ")),n.a.createElement("p",null,"Số lượt đã ứng tuyển: ",e.applied,"/",e.quantity));case"MALE":return n.a.createElement("div",null,n.a.createElement("p",null,n.a.createElement("label",{style:{marginBottom:0}},n.a.createElement(i.Icon,{type:"man",style:{color:"#168ECD"}}))," ","Nam -",n.a.createElement("label",{style:{marginLeft:5,marginBottom:0}},"Số lượt đã ứng tuyển: ",e.applied,"/",e.quantity)));case"FEMALE":return n.a.createElement("div",null,n.a.createElement("p",null,n.a.createElement("label",{style:{marginBottom:0}},n.a.createElement(i.Icon,{type:"woman",style:{color:"#ff395c"}}))," ","Nữ -",n.a.createElement("label",{style:{marginLeft:5,marginBottom:0}},"Số lượt đã ứng tuyển: ",e.applied,"/",e.quantity)));default:return n.a.createElement(y.g,null)}};class P extends l.Component{constructor(e){super(e),O(this,"show_btn",!1),O(this,"l_e",[]),O(this,"l_s",[]),O(this,"_loadData",()=>{let{jobDetail:e}=this.props;this.props.getJobDetail(window.atob(this.props.match.params.id)),this.setState({isSaved:e.isSaved})}),O(this,"_getMoreJob",e=>{this.setState({is_loading_more:!0},()=>{this.props.getEmployerMoreJob(e-1)}),setTimeout(()=>{this.setState({is_loading_more:!1})},500)}),O(this,"_getSimilarJob",e=>{this.props.getSimilarJob(e-1)}),O(this,"_handleOk",()=>{this.setState({visible:!0})}),O(this,"_handleCancel",()=>{this.setState({visible:!1})}),O(this,"_handleMessage",e=>{this.setState({message:e.target.value})}),O(this,"_handleCheckbox",(e,t)=>{let{shiftIDs:a}=this.state;!0===e.target.checked?a.push(t):h.a.remove(a,e=>e===t)}),O(this,"_toLogin",()=>{let{isAuthen:e}=this.props;localStorage.setItem("last_access",window.location.pathname);let t=window.location.pathname+window.location.search;!0!==e&&window.location.assign(`/login?path=${window.btoa(t)}`)}),O(this,"_createRequest",()=>{let{message:e,shiftIDs:t}=this.state,a=window.atob(this.props.match.params.id);this.requestToServer({message:e,shiftIDs:t},a),this.setState({visible:!1})}),this.state={is_loading:!0,visible:!1,confirmLoading:!1,message:"",genderRequired:[],shiftIDs:[],list_shiftIDs:[],check_box_state:[],jobState:"PENDING",is_loading_more:!1,isSaved:!0,jobID:null,employerID:null}}componentDidMount(){let e=L.a.parse(window.location.search),{isAuthen:t}=this.props;"1"===e.changeHost&&(t?(this.setState({visible:!0}),this.props.history.replace(`${window.location.pathname}?data=${e.data}`)):Object(J.a)("login")),this.setState({is_loading:!1}),this._loadData(),this._loadState(),Object(p.a)(0,0),this.props.getSimilarJob(0,6)}static getDerivedStateFromProps(e,t){return e.jobDetail.employerID&&e.jobDetail.employerID!==t.employerID?(e.getEmployerDetail(e.jobDetail.employerID),e.getEmployerMoreJob(0,6,e.jobDetail.employerID),{employerID:e.jobDetail.employerID}):null}async _loadState(){let{isAuthen:e,jobDetail:t}=this.props;e&&this.setState({jobState:t.appliedState})}async _saveJob(){let{isAuthen:e,jobDetail:t}=this.props;if(e){let e=await Object(s.a)(o.c,null,c.k+`/${t.id}/saved`,m.c,d.a);e&&null===e.data&&this.setState({isSaved:!0}),this.props.getJobDetail(window.atob(this.props.match.params.id))}}async requestToServer(e,t){await Object(s.a)(o.c,e,c.b+`/${t}/apply`,m.c,d.a,null,!1).then(e=>{if(e){let{results:a}=e.data;if(!0===e.data.success)R()({buttons:{catch:{text:"Lịch sử ứng tuyển",value:"catch"}},title:"Worksvns thông báo",text:"Ứng tuyển thành công!\n            Hồ sơ của bạn đã được gửi đến nhà tuyển dụng",icon:T.a.SUCCESS,dangerMode:!1}).then(e=>{switch(e){case"catch":window.open("/history-apply")}}),this.props.getJobDetail(t),this._loadState();else for(let e in a)!0===a[e].full?R()({title:"Worksvns thông báo",text:"Số người ứng tuyển đã đầy",icon:T.a.ERROR,dangerMode:!0}):!1===a[e].genderSuitable&&R()({title:"Worksvns thông báo",text:"Khác giới tính yêu cầu",icon:T.a.ERROR,dangerMode:!0})}})}render(){let{jobDetail:e,employerDetail:t,employerMoreJob:l,isAuthen:r,totalMoreJob:s,is_loading_more:o,similarJob:c,totalSimilarJob:m,is_loading_similar:d,param:g}=this.props,{is_loading:h,visible:p,confirmLoading:b,jobState:v}=this.state;if(h)return n.a.createElement(u.a,null,n.a.createElement("div",{className:"loading"},n.a.createElement(i.Icon,{type:"loading-3-quarters",spin:!0})));let f="Ứng tuyển",_=e.applyState;!1===r?f="Ứng tuyển":"PENDING"===v?(f="Đang chờ",_=!0):"ACCEPTED"===v&&(f="Đã chấp nhận",_=!0);let x=a(71);e.employerCoverUrl&&(x=e.employerCoverUrl);let w=e.employerLogoUrl;return(n.a.createElement(n.a.Fragment,null,n.a.createElement(i.Modal,{title:"Thông tin ứng tuyển",visible:p,onOk:this._handleOk,footer:[n.a.createElement(i.Button,{key:"cancel",onClick:this._handleCancel,type:"danger"},"Huỷ"),n.a.createElement(i.Button,{key:"ok",type:"primary",onClick:r?this._createRequest:this._toLogin},f)],confirmLoading:b,onCancel:this._handleCancel},n.a.createElement("div",{className:"body-requirement"},r?n.a.createElement("div",{className:"content-requirement"},n.a.createElement(B,{className:"body-requirement__text",placeholder:"Viết tin nhắn đến nhà tuyển dụng trong đơn ứng tuyển(nếu muốn)",onChange:e=>this._handleMessage(e),rows:4,maxLength:160}),n.a.createElement("div",{className:"chose-shift-rq"},e.shifts&&e.shifts.map((e,t)=>n.a.createElement("p",{key:t,className:"require__p",style:{margin:"10px 0px"}},n.a.createElement(i.Checkbox,{id:e.id,onChange:e=>{this._handleCheckbox(e,e.target.id)}},"Ca số ",t+1)))),n.a.createElement("div",{style:{fontStyle:"italic"}},n.a.createElement("span",{className:"asterisk"},"*")," Hồ sơ của bạn sẽ được gửi đến Nhà tuyển dụng! ",n.a.createElement("a",{href:"/profile",target:"_blank"},"Hoàn thiện hồ sơ"))):n.a.createElement("div",null,n.a.createElement("p",null,"Bạn cần đăng nhập trước khi đăng tuyển")))),n.a.createElement(u.a,null,n.a.createElement("div",{className:"content"},n.a.createElement(i.Row,{style:{marginTop:"0.5vw"}},n.a.createElement(i.Col,{xs:0,sm:0,md:0,lg:1,xl:2,xxl:3}),n.a.createElement(i.Col,{xs:24,sm:24,md:24,lg:22,xl:20,xxl:18},n.a.createElement("div",{id:"requirement-job",className:"job-detail-content"},n.a.createElement("div",{className:"btn-candidate show-mobile"},n.a.createElement(i.Button,{onClick:()=>{this.setState({visible:!0})}},n.a.createElement(i.Icon,{type:"solution"}))),n.a.createElement("div",{className:"cover-image-job "},n.a.createElement(S.Link,{to:`/employer/${window.btoa(t.id)}${g}`,target:"_blank",style:{fontSize:"1.05em",fontWeight:450}},n.a.createElement(q.LazyLoadImage,{alt:t&&t.employerName,src:Object(E.a)(x),onError:()=>x=a(71),className:"company-image"}))),n.a.createElement("div",{className:"job-header"},n.a.createElement("div",{className:"company-header"},n.a.createElement(i.Row,null,n.a.createElement(i.Col,{xs:4,sm:8,md:4,lg:3,xl:3,xxl:3,className:"a_c"},n.a.createElement(i.Avatar,{shape:"square",src:Object(E.a)(w,"logo"),alt:t&&t.employerName,style:{marginBottom:5,width:"90%",height:"100%"}}),n.a.createElement(y.e,null,e&&e.jobType)),n.a.createElement(i.Col,{xs:20,sm:12,md:16,lg:17,xl:16,xxl:17},n.a.createElement("h4",null,e&&e.jobTitle),n.a.createElement("div",{className:"d_j_t"},n.a.createElement(i.Icon,{type:"home",style:{color:"#168ECD"}}),n.a.createElement("label",null,n.a.createElement(S.Link,{to:`/employer/${window.btoa(t.id)}${g}`,target:"_blank",style:{fontSize:"1.05em",fontWeight:450}},t&&t.employerName))),n.a.createElement("div",{className:"d_j_t"},n.a.createElement(i.Icon,{type:"environment-o",style:{color:"#168ECD"}}),n.a.createElement("label",null,n.a.createElement("span",null,e&&e.address)))),n.a.createElement(i.Col,{xs:24,sm:24,md:4,lg:4,xl:4,xxl:4},n.a.createElement(i.Row,{className:"btn-s-c"},n.a.createElement(i.Col,{xs:4,sm:4,md:4,lg:0,xl:0,className:"a_c"}),n.a.createElement(i.Col,{xs:12,sm:12,md:24,lg:23,xl:22,xxl:22,style:{marginTop:30}},n.a.createElement(i.Affix,{offsetTop:20},n.a.createElement(i.Button,{type:_?"ghost":"default",size:"large",style:{padding:5,backgroundColor:_?"":"#31a3f9",borderColor:_?"":"white",color:_?"":"white"},icon:"solution",onClick:()=>{r?this.setState({visible:!0}):this._toLogin()},disabled:_,children:f,block:!0})))))))),n.a.createElement("div",{className:"job-content "},n.a.createElement(i.Tabs,{defaultActiveKey:"1",className:""},n.a.createElement(A,{tab:"Chi tiết công việc",key:"1"},n.a.createElement(N,{jobDetail:e,similarJob:c,_getSimilarJob:this._getSimilarJob,paging:m,is_loading_similar:d,param:g})),n.a.createElement(A,{tab:"Thông tin Công ty",key:"2"},n.a.createElement(j,{employerDetail:t,employerMoreJob:l,_getMoreJob:this._getMoreJob,paging:s,is_loading_more:o,param:g})))))))))))}}t.default=Object(r.connect)(e=>({jobDetail:e.GetJobDetail,employerDetail:e.EmployerDetail,employerMoreJob:e.EmployerMoreJob.data,similarJob:e.SimilarJob.data,is_loading_more:e.EmployerMoreJob.loading,is_loading_similar:e.SimilarJob.loading,totalMoreJob:e.EmployerMoreJob.data.totalItems,totalSimilarJob:e.SimilarJob.totalItems,isAuthen:e.AuthState.isAuthen,param:e.DetailEvent.param}),e=>({getJobDetail:t=>e({type:b.b.JOB_DETAIL.GET_JOB_DETAIL,jobID:t}),getEmployerMoreJob:(t,a,l)=>e({type:b.b.EMPLOYER_MORE_JOB.GET_EMPLOYER_MORE_JOB,pageIndex:t,pageSize:a,employerID:l}),getSimilarJob:(t,a)=>e({type:b.b.SIMILAR_JOB.GET_SIMILAR_JOB,pageIndex:t,pageSize:a}),getEmployerDetail:t=>e({type:b.b.EMPLOYER_DETAIL.GET_EMPLOYER_DETAIL,id:t})}))(P)},62:function(e,t,a){"use strict";a.d(t,"a",(function(){return n})),a.d(t,"b",(function(){return i}));const l=e=>e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."),n=(e,t,a,n)=>{let i="";return e&&(i+=l(e),t&&t!==n&&(i+="/"+t)),a&&(i&&(i+=" - "),i+=l(a),n&&(i+="/"+n)),i||(i="Thỏa thuận"),i},i=(e,t,a)=>n(e,null,t,a)},67:function(e,t,a){"use strict";a.d(t,"a",(function(){return l}));const l=(e,t)=>null!==e?e:"logo"===t?"":"./../assets/image/countdown.jpg"},70:function(e,t,a){"use strict";a.d(t,"a",(function(){return l}));const l=["mon","tue","wed","thu","fri","sat","sun"]},71:function(e,t,a){"use strict";a.r(t),t.default=a.p+"4ed8d6b214caabd74954a25518d1eaae.jpg"},74:function(e,t,a){},80:function(e,t,a){"use strict";a.r(t),a.d(t,"_checkGender",(function(){return J}));var l=a(4),n=a.n(l),i=a(39),r=a(19),s=a(6),o=a(5),c=a(9),m=a(3),d=a(2),g=a(43),h=a.n(g),p=a(64),E=a(67),u=a(61),y=a(60),b=a(0),v=a(41),f=a.n(v),_=a(70),x=(a(74),a(62));class S extends l.PureComponent{render(){let{jobDetail:e}=this.props;return(n.a.createElement("div",{className:"job-detail"},n.a.createElement(i.Row,{className:"des-job",style:{backgroundColor:"white"}},n.a.createElement(i.Col,{xs:24,sm:24,md:24,lg:15,xl:15},n.a.createElement("div",{className:"description-job "},n.a.createElement("h6",null,"Mô tả công việc"),n.a.createElement("div",{style:{padding:10,whiteSpace:"pre-line",color:"#000"},dangerouslySetInnerHTML:{__html:e&&e.description}}))),n.a.createElement(i.Col,{xs:24,sm:24,md:24,lg:9,xl:9},n.a.createElement("div",{className:"short-info"},n.a.createElement("h6",null,"Thông tin sơ lược"),n.a.createElement("ul",{style:{marginBottom:"5px"}},n.a.createElement("li",{className:"d_j_t"},n.a.createElement(i.Icon,{type:"calendar",style:{color:"rgb(74, 74, 74)"}}),n.a.createElement(y.c,{value:"Ngày đăng: "}),n.a.createElement("label",{style:{fontSize:"0.95em",color:"#000"}}," ",e&&f()(e.createdDate).format("DD/MM/YYYY"))),n.a.createElement("li",{className:"d_j_t"},n.a.createElement(i.Icon,{type:"calendar",style:{color:"rgb(74, 74, 74)"}}),n.a.createElement(y.c,{value:"Ngày hết hạn: "}),n.a.createElement("label",{style:{fontSize:"0.95em",color:"#000"}}," ",e&&f()(e.expirationDate).format("DD/MM/YYYY"))))))),n.a.createElement(i.Row,null,n.a.createElement(i.Col,{xs:24,sm:24,md:24,lg:24,xl:24},n.a.createElement(i.Row,{className:"time-job "},n.a.createElement("h6",null,"Ca làm việc"),e.shifts&&e.shifts?e.shifts.map((e,t)=>n.a.createElement(i.Col,{key:t,xs:24,sm:24,md:12,lg:12,xl:12,xxl:12},n.a.createElement("div",{className:"time-content",style:{border:"1px solid rgb(119, 197, 255)",borderRadius:"3px"}},n.a.createElement("p",{style:{color:"black",fontSize:"1.1em",borderBottom:"1px solid rgb(119, 197, 255)",paddingBottom:5,paddingLeft:"15px",backgroundColor:"rgb(226, 242, 254)",margin:"0",paddingTop:5}},"Ca số ",t+1),n.a.createElement("p",null,n.a.createElement(i.Icon,{type:"clock-circle",style:{color:"#168ECD"}})," "+e.startTime+"-"+e.endTime),n.a.createElement("p",null,n.a.createElement(i.Icon,{type:"dollar",style:{color:"#168ECD"}}),Object(x.b)(e.minSalary,e.maxSalary,e.unit)),n.a.createElement("div",{className:"week-day"},_.a.map((t,a)=>{if(!0===e[t]){let e="T"+(a+2);return 6===a&&(e="CN"),n.a.createElement("label",{key:a,className:"time-span"},e)}{let e="T"+(a+2);return 6===a&&(e="CN"),n.a.createElement("label",{key:a,className:"time-span-unselected"},e)}})),e.genderRequireds[0]?J(e.genderRequireds[0]):null,e.genderRequireds[1]?J(e.genderRequireds[1]):null))):n.a.createElement(y.g,{msg:"Ca làm việc không tồn tại"})))),n.a.createElement(i.Row,null,n.a.createElement(i.Col,{xs:24,sm:24,md:24,lg:24,xl:24},n.a.createElement("div",{className:"skills-job-detail "},n.a.createElement("h6",null,"Kĩ năng khác"),n.a.createElement("div",{style:{padding:15}},e.requiredSkills&&e.requiredSkills.length>0?e.requiredSkills.map((e,t)=>n.a.createElement("label",{key:t,className:"skills-detail"},e.name)):n.a.createElement(y.g,{msg:"Ứng viên không đòi hỏi kỹ năng khác"})))))))}}var w=a(8),N=a(11),k=a(13),C=a.n(k),D=a(66),j=a(12),I=a.n(j),R=a(40);function T(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}const{TabPane:M}=i.Tabs,{TextArea:L}=i.Input,J=e=>{if(e.gender)switch(e.gender){case"BOTH":return n.a.createElement("div",null,n.a.createElement("p",null,n.a.createElement("label",{style:{marginBottom:0,marginRight:3}},n.a.createElement(i.Icon,{type:"man",style:{color:"rgb(21, 148, 255)"}}),"Nam"," "),n.a.createElement("label",{style:{marginBottom:0,marginRight:5}},n.a.createElement(i.Icon,{type:"woman",style:{color:"#ff395c"}}),"Nữ"," ")),n.a.createElement("p",null,"Số lượt đã ứng tuyển: ",e.applied,"/",e.quantity));case"MALE":return n.a.createElement("div",null,n.a.createElement("p",null,n.a.createElement("label",{style:{marginBottom:0}},n.a.createElement(i.Icon,{type:"man",style:{color:"#168ECD"}}))," ","Nam -",n.a.createElement("label",{style:{marginLeft:5,marginBottom:0}},"Số lượt đã ứng tuyển: ",e.applied,"/",e.quantity)));case"FEMALE":return n.a.createElement("div",null,n.a.createElement("p",null,n.a.createElement("label",{style:{marginBottom:0}},n.a.createElement(i.Icon,{type:"woman",style:{color:"#ff395c"}}))," ","Nữ -",n.a.createElement("label",{style:{marginLeft:5,marginBottom:0}},"Số lượt đã ứng tuyển: ",e.applied,"/",e.quantity)));default:return n.a.createElement(y.g,null)}};class q extends l.Component{constructor(e){super(e),T(this,"show_btn",!1),T(this,"l_e",[]),T(this,"l_s",[]),T(this,"_loadData",()=>{let{jobDetail:e}=this.props;this.props.getJobDetail(window.atob(this.props.match.params.id),window.location.search),this.setState({isSaved:e.isSaved})}),T(this,"_handleOk",()=>{this.setState({visible:!0})}),T(this,"_handleCancel",()=>{this.setState({visible:!1})}),T(this,"_handleMessage",e=>{this.setState({message:e.target.value})}),T(this,"_handleCheckbox",(e,t)=>{let{shiftIDs:a}=this.state;!0===e.target.checked?a.push(t):h.a.remove(a,e=>e===t),this.setState({shiftIDs:a})}),T(this,"_toLogin",()=>{let{isAuthen:e}=this.props;localStorage.setItem("last_access",window.location.pathname);let t=window.location.pathname+window.location.search;!0!==e&&window.location.assign(`/login?path=${window.btoa(t)}`)}),T(this,"_createRequest",()=>{let{message:e,shiftIDs:t}=this.state,a=window.atob(this.props.match.params.id);this.requestToServer({message:e,shiftIDs:t},a),this.setState({visible:!1})}),this.state={is_loading:!0,visible:!1,confirmLoading:!1,message:"",genderRequired:[],shiftIDs:[],list_shiftIDs:[],check_box_state:[],jobState:"PENDING",is_loading_more:!1,isSaved:!0,jobID:null,employerID:null,can_send:!1}}async componentDidMount(){let e=C.a.parse(window.location.search),{isAuthen:t}=this.props;"1"===e.changeHost&&(t?(this.setState({visible:!0}),this.props.history.replace(`${window.location.pathname}?data=${e.data}`)):Object(D.a)("login")),this.setState({is_loading:!1}),await this._loadData(),this._loadState(),Object(p.a)(0,0)}async _loadState(){let{isAuthen:e,jobDetail:t}=this.props;e&&this.setState({jobState:t.appliedState})}async _saveJob(){let{isAuthen:e,jobDetail:t}=this.props;if(e){let e=await Object(s.a)(o.c,null,c.k+`/${t.id}/saved`,m.c,d.a);e&&null===e.data&&this.setState({isSaved:!0}),this.props.getJobDetail(window.atob(this.props.match.params.id),window.location.search)}}async requestToServer(e,t){await Object(s.a)(o.c,e,c.b+`/${t}/apply`,m.c,d.a,null,!1).then(e=>{if(e){let{results:a}=e.data;if(!0===e.data.success)I()({buttons:{catch:{text:"Lịch sử ứng tuyển",value:"catch"}},title:"Worksvns thông báo",text:"Ứng tuyển thành công!\n            Hồ sơ của bạn đã được gửi đến nhà tuyển dụng",icon:N.a.SUCCESS,dangerMode:!1}).then(e=>{switch(e){case"catch":window.open("/history-apply")}}),this.props.getJobDetail(t,window.location.search),this._loadState();else for(let e in a)!0===a[e].full?I()({title:"Worksvns thông báo",text:"Số người ứng tuyển đã đầy",icon:N.a.ERROR,dangerMode:!0}):!1===a[e].genderSuitable&&I()({title:"Worksvns thông báo",text:"Khác giới tính yêu cầu",icon:N.a.ERROR,dangerMode:!0})}})}componentWillUnmount(){}render(){let{jobDetail:e,isAuthen:t,param:a}=this.props,{is_loading:l,visible:r,confirmLoading:s,jobState:o,shiftIDs:c}=this.state;if(l)return n.a.createElement(u.a,null,n.a.createElement("div",{className:"loading"},n.a.createElement(i.Icon,{type:"loading-3-quarters",spin:!0})));let m="Ứng tuyển",d=e.applyState;!1===t?m="Ứng tuyển":"PENDING"===o?(m="Đang chờ",d=!0):"ACCEPTED"===o&&(m="Đã chấp nhận",d=!0);let g=e.employerCoverUrl,h=e.employerLogoUrl;return n.a.createElement(n.a.Fragment,null,n.a.createElement(i.Modal,{title:"Thông tin ứng tuyển",visible:r,onOk:this._handleOk,footer:[n.a.createElement(i.Button,{key:"cancel",onClick:this._handleCancel,type:"danger"},"Huỷ"),n.a.createElement(i.Button,{key:"ok",disabled:0===c.length,type:"primary",onClick:t?this._createRequest:this._toLogin},m)],confirmLoading:s,onCancel:this._handleCancel},n.a.createElement("div",{className:"body-requirement"},t?n.a.createElement("div",{className:"content-requirement"},n.a.createElement(L,{className:"body-requirement__text",placeholder:"Viết tin nhắn đến nhà tuyển dụng trong đơn ứng tuyển(nếu muốn)",onChange:e=>this._handleMessage(e),rows:4,maxLength:160}),n.a.createElement("div",{className:"chose-shift-rq"},e.shifts&&e.shifts.map((e,t)=>n.a.createElement("p",{key:t,className:"require__p",style:{margin:"10px 0px"}},n.a.createElement(i.Checkbox,{id:e.id,onChange:e=>{this._handleCheckbox(e,e.target.id)}},"Ca số ",t+1)))),n.a.createElement("div",{style:{fontStyle:"italic"}},n.a.createElement("span",{className:"asterisk"},"*")," Hồ sơ của bạn sẽ được gửi đến Nhà tuyển dụng! ",n.a.createElement("a",{href:"/profile",target:"_blank"},"Hoàn thiện hồ sơ"))):n.a.createElement("div",null,n.a.createElement("p",null,"Bạn cần đăng nhập trước khi đăng tuyển")))),n.a.createElement(u.a,null,n.a.createElement("div",{className:"content"},n.a.createElement(i.Row,null,n.a.createElement(i.Col,{xs:0,sm:0,md:0,lg:1,xl:2,xxl:3}),n.a.createElement(i.Col,{xs:24,sm:24,md:24,lg:22,xl:20,xxl:18},n.a.createElement("div",{id:"requirement-job",className:"job-detail-content"},n.a.createElement("div",{className:"btn-candidate show-mobile"},n.a.createElement(i.Button,{onClick:()=>{this.setState({visible:!0})}},n.a.createElement("i",{className:"fa fa-paper-plane-o","aria-hidden":"true"}))),n.a.createElement("div",{className:"cover-image-job "},n.a.createElement(R.LazyLoadImage,{alt:e.employerName,src:Object(E.a)(g),className:"company-image"})),n.a.createElement(i.Affix,{offsetTop:0},n.a.createElement("div",{className:"job-header"},n.a.createElement("div",{className:"company-header"},n.a.createElement(i.Row,null,n.a.createElement(i.Col,{xs:4,sm:8,md:4,lg:3,xl:4,className:"a_c"},n.a.createElement(i.Avatar,{size:70,shape:"square",src:Object(E.a)(h,"logo"),alt:"logo-company"}),n.a.createElement(y.e,null,e&&e.jobType)),n.a.createElement(i.Col,{xs:20,sm:12,md:16,lg:17,xl:14},n.a.createElement("h4",null,e&&e.jobTitle),n.a.createElement("div",{className:"d_j_t"},n.a.createElement(i.Icon,{type:"home",style:{color:"#168ECD"}}),n.a.createElement(w.Link,{to:`/employer/${window.btoa(e.employerID)}${a}`,target:"_blank",style:{fontSize:"1.05em",fontWeight:450}},e&&e.employerName)),n.a.createElement("div",{className:"d_j_t"},n.a.createElement(i.Icon,{type:"environment-o",style:{color:"#168ECD"}}),n.a.createElement("span",null,e&&e.address))),n.a.createElement(i.Col,{xs:24,sm:24,md:4,lg:4,xl:4},n.a.createElement(i.Row,{className:"btn-s-c"},n.a.createElement(i.Col,{xs:4,sm:4,md:4,lg:0,xl:0,className:"a_c"}),n.a.createElement(i.Col,{xs:12,sm:12,md:24,lg:24,xl:24,style:{marginTop:30}},n.a.createElement(i.Button,{type:d?"ghost":"default",size:"large",style:{padding:"5px 0px",backgroundColor:d?"":"#31a3f9",borderColor:d?"":"white",color:d?"":"white"},onClick:()=>{t?this.setState({visible:!0}):this._toLogin()},disabled:d,children:m,block:!0})))))))),n.a.createElement("div",{className:"job-content "},n.a.createElement(i.Tabs,{defaultActiveKey:"1",className:""},n.a.createElement(M,{tab:"Chi tiết công việc",key:"1"},n.a.createElement(S,{jobDetail:e})))))),n.a.createElement(i.Col,{xs:0,sm:0,md:0,lg:1,xl:2,xxl:3})))))}}t.default=Object(r.connect)(e=>({jobDetail:e.GetEventJobDetail,employerDetail:e.EmployerDetail,isAuthen:e.AuthState.isAuthen,param:e.DetailEvent.param}),e=>({getJobDetail:(t,a)=>e({type:b.b.EVENT.JOB.DETAIL,jobID:t,eventAndSchoolID:a}),getEmployerDetail:t=>e({type:b.b.EMPLOYER_DETAIL.GET_EMPLOYER_DETAIL,id:t})}))(q)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,