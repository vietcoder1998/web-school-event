(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{119:function(e,t,a){"use strict";a.r(t);var l=a(4),n=a.n(l),o=a(61),i=a(19),r=a(39),s=(a(88),a(0)),c=a(76),m=a(77),h=a(78),p=a(79),d=a(13),y=a.n(d),g=a(40);function u(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}const E=r.Input.Group,{Option:b}=r.Select,{TabPane:v}=r.Tabs;let T=[{name:"Thứ hai",shortcut:"MON"},{name:"Thứ ba",shortcut:"TUE"},{name:"Thứ tư",shortcut:"WED"},{name:"Thứ năm",shortcut:"THU"},{name:"Thứ sáu",shortcut:"FRI"},{name:"Thứ bảy",shortcut:"SAT"},{name:"Chủ nhật",shortcut:"SUN"}],_=[{name:"Ca sáng",shortcut:"MOR"},{name:"Ca Chiều ",shortcut:"AFT"},{name:"Ca Tối",shortcut:"EVN"}];class w extends l.Component{constructor(e){super(e),u(this,"_isMounted",!1),u(this,"showModal",()=>{this.setState({visible:!0})}),u(this,"handleOk",e=>{this.setState({visible:!1})}),u(this,"handleCancel",e=>{this.setState({visible:!1})}),u(this,"_handleInput",()=>{let{job_dto:e}=this.state;this.setState({job_dto:e})}),u(this,"_handleKeyDown",e=>{13===e.keyCode&&this._createRequest()}),u(this,"_handleShift",e=>{let{list_shift:t}=this.props,a=e.target.id;t[a]=!t[a],this.setState({list_shift:t}),this.props.setFilterListShift(t)}),u(this,"_handleTime",e=>{let{list_day:t}=this.props,a=e.target.id;t[a]=!t[a],this.setState({list_day:t}),this.props.setFilterListDay(t)}),u(this,"_handleShowDay",(e,t)=>{let a;t?a=t:t=!1,this.setState({show_days:a,jobType:e}),this.props.setFilterJobType(e,a)}),u(this,"_selectJob",e=>{let{job_dto:t}=this.props;t.name=e.key,t.id=e.item.props.id,this.props.setFilterJobName(t)}),u(this,"_handleOk",()=>{let{location:e,show_location:t,choose_location:a}=this.state;a&&(e.address=localStorage.getItem("location"),e.marker=this.props.marker),t=!0,this.setState({show_modal:!1,location:e,show_location:t})}),u(this,"_onSearch",e=>{this.props.getJobNames(e)}),u(this,"_openModal",()=>{this.setState({show_modal:!0})}),u(this,"_handleCancel",()=>{this.setState({show_modal:!1})}),u(this,"_handleShowLocation",()=>{let{show_location:e}=this.state;e=!e,this.setState({show_location:e})}),u(this,"_handleChooseLocation",e=>{let{choose_location:t}=this.state;t=e,this.setState({choose_location:t})}),u(this,"_setArea",e=>{this.setState({area:e}),this.props.setFilterArea(e),localStorage.setItem("region",JSON.stringify(e))}),u(this,"_handleTabs",e=>{switch(e){case"0":this._handleShowDay(null,!1);break;case"1":this._handleShowDay("PARTTIME",!0);break;case"2":this._handleShowDay("FULLTIME",!1);break;case"3":this._handleShowDay("INTERNSHIP",!1)}}),u(this,"_createRequest",()=>{let{location:e,choose_location:t}=this.state,{jobType:a,list_shift:l,list_day:n,area:o,job_dto:i,show_days:r}=this.props,s=i.id?[i.id]:null,c={gender:"BOTH",weekDays:[],dayTimes:[]},m={regionID:null,lat:null,lon:null};r?(Object.keys(n).map(e=>(!0===n[e]&&c.weekDays.push(e),null)),Object.keys(l).map(e=>(!0===l[e]&&c.dayTimes.push(e),null))):c=null,!0===t?(m.lat=e.marker.lat,m.lon=e.marker.lng):(m.regionID=o.id,m.lat=null,m.lon=null),this.requestToServer({employerID:null,excludedJobIDs:null,excludePriority:null,shuffle:!0,jobNameIDs:s,jobGroupID:null,jobType:a,jobShiftFilter:c,jobLocationFilter:m})}),this.state={job_dto:{name:"",id:0},list_day:{MON:!0,TUE:!0,WED:!0,THU:!0,FRI:!0,SAT:!0,SUN:!0},jobType:"PARTTIME",list_shift:{MOR:!0,AFT:!0,EVN:!0},show_days:!0,choose_advanced:!1,jobNames:[],regions:[],data_jobs:[],show_modal:!1,location:{marker:{lat:0,lng:0},address:""},area:{id:null,name:"",totalJobs:0},show_location:!1,choose_location:!1,visible:!1,showQRImageType:0}}async componentDidMount(){this.props.getRegions(),this.props.getJobNames(),this.props.area||this.props.setFilterArea({id:24,name:"Hà Nội"})}keyJobType(e){switch(e){case null:return"0";case"PARTTIME":return"1";case"FULLTIME":return"2";case"INTERNSHIP":return"3"}}listArea(){let{regions:e,area:t}=this.props;return(n.a.createElement(r.Select,{showSearch:!0,defaultValue:t?t.name:"Chọn tỉnh thành bạn muốn",style:{width:"80%"},size:"default"},e.map((e,t)=>n.a.createElement(r.Select.Option,{key:t,value:e.name,onClick:()=>{this._setArea(e)}},e.name))))}requestToServer(e){let{job_dto:t,area:a,list_day:l,list_shift:n}=this.props,o=t.id?t.id:null,i=a.id?a.id:null;this.props.setFilter(!0),localStorage.setItem("paging",JSON.stringify({pageIndex:0,pageSize:10})),localStorage.setItem("searchData",e),this.props.getJobResult(e);let r={jobType:this.props.jobType,jobNameID:o,regionID:i};if(r=Object.assign(r,l),r=Object.assign(r,n),r=y.a.stringify(r),this.props.param){let e=y.a.parse(this.props.param);this.props.history.push("/result?"+r+"&eventID="+e.eventID+"&schoolID="+e.schoolID)}else this.props.history.push("/result?"+r)}componentWillUnmount(){this._isMounted=!0}render(){let{choose_advanced:e,showQRImageType:t}=this.state,{jobNames:a,regions:l,list_shift:o,list_day:i,area:s,job_dto:d,show_days:y,primaryColor:u}=this.props;return n.a.createElement(n.a.Fragment,null,n.a.createElement(r.Modal,{title:"Mã QR ứng dụng tìm việc",visible:this.state.visible,onOk:this.handleOk,onCancel:this.handleCancel,footer:[n.a.createElement(r.Button,{key:"submit",type:"primary",onClick:this.handleOk},"Ok")]},1===t?n.a.createElement("div",{style:{textAlign:"center"}},n.a.createElement(g.LazyLoadImage,{"data-src":h.a,alt:"AppleStore Tìm việc QRCode",height:"250px",width:"auto",style:{marginTop:"1.2px",marginLeft:"5px"}}),n.a.createElement("div",null,"Ứng dụng tìm việc Worksvn trên AppleStore")):n.a.createElement("div",{style:{textAlign:"center"}},n.a.createElement(g.LazyLoadImage,{"data-src":p.a,alt:"CHPlay Tìm việc QRCode",height:"250px",width:"auto",style:{marginTop:"1.2px",marginLeft:"5px"}}),n.a.createElement("div",null,"Ứng dụng tìm việc Worksvn trên CHPlay"))),n.a.createElement("div",{className:"search-area"},n.a.createElement("div",{className:"search-box-phone show-only-phone"},n.a.createElement(r.Select,{style:{width:"100%"},placeholder:"Tìm kiếm công việc của bạn",size:"default",showSearch:!0,optionFilterProp:"children",onSearch:this._onSearch,defaultValue:d&&d.name?d.name:void 0},a&&a.map((e,t)=>n.a.createElement(b,{key:t,id:e.id,value:e.name,onClick:this._selectJob},e.name+"  "))),n.a.createElement("div",{className:"find-area"},n.a.createElement(E,null,n.a.createElement(r.Select,{defaultValue:s?s.name:"Chọn tỉnh thành bạn muốn",style:{width:"100%"},size:"default"},l.map((e,t)=>n.a.createElement(r.Select.Option,{key:t,value:e.name,onClick:()=>{this._setArea(e)}},e.name))))),n.a.createElement(r.Tabs,{defaultActiveKey:"PARTTIME"===this.props.jobType?"1":"FULLTIME"===this.props.jobType?"2":"3",onChange:this._handleTabs},n.a.createElement(v,{tab:"Làm thêm",key:"1",onClick:()=>{this._handleShowDay(!0,"PARTTIME")}},n.a.createElement("div",{className:"choose-time",style:{display:!0===y?"block":"none"}},n.a.createElement("div",{className:"choose-shift"},_.map((e,t)=>n.a.createElement(r.Button,{id:e.shortcut,key:t,onClick:this._handleShift,style:{background:o[e.shortcut]?u:"white",color:o[e.shortcut]?"white":u}},e.name))),n.a.createElement("div",{className:"choose-day"},T.map((e,t)=>n.a.createElement(r.Button,{id:e.shortcut,key:t,className:"choose_btn",onClick:this._handleTime,style:{background:i[e.shortcut]?u:"white",color:i[e.shortcut]?"white":u}},"SUN"===e.shortcut?"CN":"T"+(t+2)))))),n.a.createElement(v,{tab:"Chính thức",key:"2",onClick:()=>{this._handleShowDay(!1,"FULLTIME")}}),n.a.createElement(v,{tab:"Thực tập",key:"3"})),n.a.createElement("div",{className:"find-now"},n.a.createElement(r.Button,{size:"large",onClick:()=>this._createRequest(),type:"danger",style:{color:"white",border:"solid white 1px",width:"100%"}},n.a.createElement(r.Icon,{type:"search"}),"Tìm việc ngay"))),n.a.createElement("div",{className:"search-box hidden-only-phone"},n.a.createElement("div",null,n.a.createElement("p",{style:{fontSize:"1.5rem",color:"white",fontWeight:550,marginBottom:"5px"}},"Tìm Công Việc Mơ Ước. Nâng Bước Thành Công!")),n.a.createElement(r.Tabs,{defaultActiveKey:this.keyJobType(this.props.jobType),onChange:this._handleTabs},n.a.createElement(v,{tab:"Tất cả loại công việc",key:"0",onClick:()=>{this._handleShowDay(null,!1)}}),n.a.createElement(v,{tab:"Làm thêm",key:"1",onClick:()=>{this._handleShowDay(!0,"PARTTIME")}},n.a.createElement("div",{className:"choose-time",style:{display:!0===y?"block":"none"}},n.a.createElement("div",{className:"choose-shift"},_.map((e,t)=>n.a.createElement(r.Button,{id:e.shortcut,key:t,onClick:this._handleShift,style:{background:o[e.shortcut]?u:"white",color:o[e.shortcut]?"white":"black",border:i[e.shortcut]?`solid 1px ${u}`:"white"}},e.name))),n.a.createElement("div",{className:"choose-day"},T.map((e,t)=>n.a.createElement(r.Button,{id:e.shortcut,key:t,className:"choose_btn",onClick:this._handleTime,style:{background:i[e.shortcut]?u:"white",color:i[e.shortcut]?"white":"black",border:i[e.shortcut]?`solid 1px ${u}`:"white"}},"SUN"===e.shortcut?"CN":"Thứ "+(t+2)))))),n.a.createElement(v,{tab:"Chính thức",key:"2",onClick:()=>{this._handleShowDay(!1,"FULLTIME")}}),n.a.createElement(v,{tab:"Thực tập",key:"3"})),n.a.createElement("div",{className:"search-type",style:{margin:e?"0px":"20px 0px"}},n.a.createElement(E,{size:"large",compact:!0,style:{fontSize:"1.2rem"}},n.a.createElement(r.Select,{showSearch:!0,defaultValue:s?s.name:"Chọn tỉnh thành",style:{width:"25%"},size:"large"},n.a.createElement(b,{key:"1",value:null,onClick:()=>{this._setArea({id:null,name:"Tất cả các tỉnh thành"})}},"Tất cả các tỉnh thành"),l.map((e,t)=>n.a.createElement(r.Select.Option,{key:t,value:e.name,onClick:()=>{this._setArea(e)}},e.name))),n.a.createElement(r.Select,{style:{width:"50%"},placeholder:"Tìm kiếm công việc của bạn",size:"large",showSearch:!0,optionFilterProp:"children",onSearch:e=>this._onSearch(e),defaultValue:d&&d.name?d.name:void 0},n.a.createElement(b,{key:"1",value:null,onClick:()=>{this.props.setFilterJobName({id:null,name:"Tất cả các công việc"})}},"Tất cả các công việc"),a&&a.map((e,t)=>n.a.createElement(b,{key:t,id:e.id,value:e.name,onClick:this._selectJob},e.name+"  "))),n.a.createElement(r.Button,{size:"large",type:"danger",style:{width:"25%"},onClick:()=>this._createRequest()},n.a.createElement(r.Icon,{type:"search"}),"Tìm việc ngay"))),n.a.createElement("div",null,"PARTTIME"===this.props.jobType?null:n.a.createElement("div",{style:{paddingTop:"25px",paddingBottom:"15px"}},n.a.createElement("p",{style:{color:"#fff"}},"Trải nghiệm tìm việc đỉnh cao bằng ứng dụng Worksvn trên điện thoại!"),n.a.createElement(r.Row,null,n.a.createElement(r.Col,{xs:24,sm:24,md:12,lg:12,xl:12,xxl:12,style:{justifyContent:"flex-end",display:"flex",padding:"0 15px",borderRight:"1px solid #fff"}},n.a.createElement("a",{href:"https://apps.apple.com/vn/app/worksvn-sinh-vi%C3%AAn/id1492437454"},n.a.createElement(g.LazyLoadImage,{src:m.a,alt:"AppleStore Tìm việc",height:"50px",width:"auto"})),n.a.createElement(g.LazyLoadImage,{onClick:()=>{this.setState({visible:!0,showQRImageType:1})},src:h.a,alt:"AppleStore Tìm việc QRCode",height:"47px",width:"auto",style:{marginTop:"1.2px",marginLeft:"5px",cursor:"pointer"}})),n.a.createElement(r.Col,{xs:24,sm:24,md:12,lg:12,xl:12,xxl:12,style:{justifyContent:"flex-start",display:"flex",padding:"0 15px"}},n.a.createElement("a",{href:"https://play.google.com/store/apps/details?id=com.worksvn.candidate&hl=vi"},n.a.createElement(g.LazyLoadImage,{src:c.a,alt:"CHPlay Tìm việc",height:"50px",width:"auto"})),n.a.createElement(g.LazyLoadImage,{onClick:()=>{this.setState({visible:!0,showQRImageType:2})},src:p.a,alt:"CHPlay Tìm việc QRCode",height:"47px",width:"auto",style:{marginTop:"1.2px",marginLeft:"5px",cursor:"pointer"}}))))))))}}var S=Object(i.connect)(e=>({marker:e.MapState.marker,isAuthen:e.AuthState.isAuthen,regions:e.Regions.items,jobNames:e.JobNames.items,jobType:e.JobResult.filter.jobType,show_days:e.JobResult.filter.show_days,list_shift:e.JobResult.filter.list_shift,list_day:e.JobResult.filter.list_day,area:e.JobResult.filter.area,job_dto:e.JobResult.filter.job_dto,primaryColor:e.DetailEvent.primaryColor,param:e.DetailEvent.param}),e=>({getJobResult:t=>e({type:s.b.JOB_RESULT.GET_JOB_RESULT,body:t}),getJobNames:t=>e({type:s.b.JOB_NAMES.GET_JOB_NAMES,name:t}),getRegions:()=>e({type:s.b.REGIONS.GET_REGIONS}),setFilterJobType:(t,a)=>e({type:s.a.JOB_RESULT.SET_FILTER_JOB_TYPE,jobType:t,show_days:a}),setFilterListShift:t=>e({type:s.a.JOB_RESULT.SET_FILTER_LIST_SHIFT,list_shift:t}),setFilterListDay:t=>e({type:s.a.JOB_RESULT.SET_FILTER_LIST_DAY,list_day:t}),setFilterArea:t=>e({type:s.a.JOB_RESULT.SET_FILTER_AREA,area:t}),setFilterJobName:t=>e({type:s.a.JOB_RESULT.SET_FILTER_JOBNAME,job_dto:t}),setFilter:t=>e({type:s.a.JOB_RESULT.SET_FILTER,setFilter:t})}))(w),N=a.p+"e3501861fd3e6fff691e52b76f7d92f3.jpg";var f=function(e){let t="100%";return window.innerWidth<425?t="190%":window.innerWidth<=776&&(t="150%"),n.a.createElement("div",{className:"tab-search "},n.a.createElement(r.Carousel,{style:{position:"static"},dots:!0,autoplay:!0},n.a.createElement("div",{style:{height:"550px"}},n.a.createElement(g.LazyLoadImage,{src:N,className:"img-background",style:{backgroundSize:"cover",width:t,marginTop:"-20vw",opacity:.8},alt:"job-title1"}))),n.a.createElement("div",{className:"search-content"},n.a.createElement("div",{className:"search-body"},n.a.createElement(S,e))))},k=a(8),x=a(16),I=a(60),C=a(68),j=a(62);function L(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}class R extends l.PureComponent{constructor(...e){super(...e),L(this,"componentDidMount",async()=>{await this.props.getHotJob(0)}),L(this,"changePage",e=>{this.props.getHotJob(e-1)})}render(){let{topJob:e,loading:t,param:a}=this.props;return(n.a.createElement("div",{className:"home-job"},n.a.createElement(r.Row,{style:{display:0===e.totalItems?"none":""}},n.a.createElement("h5",{style:{textAlign:"center"}},"VIỆC LÀM TUYỂN GẤP"),e&&e.items?e.items.map((e,l)=>{let o=e.employerLogoUrl;return o||(o=x.a),n.a.createElement(r.Col,{xs:24,sm:12,md:12,lg:8,xl:8,xxl:6,key:l},t?n.a.createElement(r.Skeleton,{key:l,loading:!0,avatar:!0,paragraph:{rows:1},active:!0}):n.a.createElement("div",{key:l,className:"h-j-item"},n.a.createElement("div",{className:"img-job"},n.a.createElement(k.Link,{to:`/employer/${btoa(e.employerID)}`},n.a.createElement(g.LazyLoadImage,{src:o,alt:"employer logo"})),n.a.createElement(I.e,null,e.jobType)),n.a.createElement("div",{className:"job-content"},n.a.createElement("ul",null,n.a.createElement("li",{className:"j-d"},n.a.createElement(k.Link,{to:`/job-detail/${window.btoa(e.id)}${a}`,target:"_blank"},n.a.createElement("h6",{className:"l_c",style:{color:e.titleHighlight?"red":"black"}},n.a.createElement(C.a,{title:e.jobTitle,name:n.a.createElement(n.a.Fragment,null,n.a.createElement("span",{className:"in-day-badge",style:{marginRight:5},children:"GẤP"}),e.jobTitle),transform:"uppercase"})))),n.a.createElement("li",{className:"l_c"},n.a.createElement(k.Link,{to:`/employer/${window.btoa(e.employerID)}${a}`,target:"_blank",className:"name_employer"},n.a.createElement(C.a,{title:e.employerName,name:n.a.createElement(n.a.Fragment,null,n.a.createElement(r.Icon,{type:"shop",style:{marginRight:5}}),e.employerName),transform:"initial"}))),n.a.createElement("li",{className:"region"},n.a.createElement(r.Icon,{type:"environment",style:{marginRight:3}}),e.region&&e.region.name?e.region.name:null),n.a.createElement("li",{className:"region"},n.a.createElement("span",{className:"salary-label"},n.a.createElement(r.Icon,{type:"dollar",style:{marginRight:3}}),Object(j.a)(e.minSalary,e.minSalaryUnit,e.maxSalary,e.maxSalaryUnit)))))))}):null,n.a.createElement(r.Col,{span:24,style:{textAlign:"center"}},n.a.createElement(r.Pagination,{pageSize:e.pageSize,total:e.totalItems,style:{margin:"25px 0px 10px"},onChange:this.changePage})))))}}var O=Object(i.connect)(e=>({topJob:e.HotJobResult.data,loading:e.HotJobResult.loading,param:e.DetailEvent.param}),e=>({getHotJob:(t,a)=>e({type:s.b.HOT_JOB.GET_HOT_JOB,pageIndex:t,pageSize:a})}))(R);function J(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}class A extends l.PureComponent{constructor(...e){super(...e),J(this,"componentDidMount",async()=>{await this.props.getAllJob(0)}),J(this,"changePage",e=>{this.props.getAllJob(e-1)})}render(){let{allJob:e,loading_all_job:t,param:a}=this.props;return(n.a.createElement("div",{className:"home-job"},n.a.createElement(r.Row,{style:{display:0===e.totalItems?"none":""}},n.a.createElement("h5",{style:{textAlign:"center"}},"VIỆC LÀM ĐANG TUYỂN"),e&&e.items?e.items.map((e,l)=>{let o=e.employerLogoUrl;return o||(o=x.a),n.a.createElement(r.Col,{xs:24,sm:12,md:12,lg:8,xl:8,xxl:6,key:l},t?n.a.createElement(r.Skeleton,{key:l,loading:!0,avatar:!0,paragraph:{rows:1},active:!0}):n.a.createElement("div",{key:l,className:"h-j-item"},n.a.createElement("div",{className:"img-job"},n.a.createElement(k.Link,{to:`/employer/${btoa(e.employerID)}`},n.a.createElement(g.LazyLoadImage,{src:o,alt:"employer logo"})),n.a.createElement(I.e,null,e.jobType)),n.a.createElement("div",{className:"job-content"},n.a.createElement("ul",null,n.a.createElement("li",{className:"j-d"},n.a.createElement(k.Link,{to:`/job-detail/${window.btoa(e.id)}${a}`,target:"_blank"},n.a.createElement("h6",{className:"l_c"},e.jobTitle))),n.a.createElement("li",{className:"l_c"},n.a.createElement(k.Link,{to:`/employer/${window.btoa(e.employerID)}${a}`,target:"_blank",className:"name_employer"},n.a.createElement(r.Icon,{type:"shop",style:{marginRight:3}}),e.employerName)),n.a.createElement("li",{className:"region"},n.a.createElement(r.Icon,{type:"environment",style:{marginRight:3}}),e.region&&e.region.name?e.region.name:null),n.a.createElement("li",{className:"region"},n.a.createElement(r.Icon,{type:"dollar",style:{marginRight:3}}),Object(j.a)(e.minSalary,e.minSalaryUnit,e.maxSalary,e.maxSalaryUnit))))))}):null,n.a.createElement(r.Col,{span:24,style:{textAlign:"center"}},n.a.createElement(r.Pagination,{pageSize:e.pageSize,total:e.totalItems,style:{margin:"25px 0px 10px"},onChange:this.changePage})))))}}var D=Object(i.connect)(e=>({allJob:e.AllJobResult.data,loading_all_job:e.AllJobResult.loading,param:e.DetailEvent.param}),e=>({getAllJob:(t,a)=>e({type:s.b.ALL_JOB.GET_ALL_JOB,pageIndex:t,pageSize:a})}))(A),M=(a(46),a(47),a(48)),F=a.n(M);class P extends l.PureComponent{constructor(...e){var t,a,l;super(...e),l=async()=>{this.props.getTopEmployer(null,0,8)},(a="componentDidMount")in(t=this)?Object.defineProperty(t,a,{value:l,enumerable:!0,configurable:!0,writable:!0}):t[a]=l}render(){var e={infinite:!0,speed:500,slidesToShow:3,slidesToScroll:1,autoplay:!0,autoplaySpeed:2e3};let{topEm:t,totalItems:a,loading:l}=this.props;return t&&a>0?n.a.createElement("div",{className:"top-job"},n.a.createElement("h5",{className:"a_c"},"DOANH NGHIỆP NỔI BẬT "),n.a.createElement(r.Row,{style:{padding:"0 3vw"}},n.a.createElement(r.Col,{xl:0,xxl:2,children:"ok",style:{color:"rgba(0, 0, 0, 0)"}}),n.a.createElement(F.a,e,t.map((e,t)=>n.a.createElement(r.Col,{key:t,xs:11,sm:11,md:6,lg:6,xl:6,xxl:5,style:{overflow:"hidden"}},n.a.createElement("a",{href:`/employer/${btoa(e.employerID)}`},l?n.a.createElement(r.Skeleton,{loading:l,avatar:!0,paragraph:{rows:1}}):n.a.createElement("div",{className:"top-em-detail"},n.a.createElement("img",{src:e.employerLogoUrl,alt:e.employerName,width:"100%",height:"210vh",style:{objectFit:"contain"}})))))))):null}}var z=Object(i.connect)(e=>({topEm:e.TopEmployer.data.items,totalItems:e.TopEmployer.data.totalItems,loading:e.TopEmployer.loading}),e=>({getTopEmployer:(t,a,l)=>e({type:s.b.EMPLOYER.GET_TOP_EM,body:t,pageIndex:a,pageSize:l})}))(P),U=a(49),B=a.n(U),H=a(65),$=a(5),G=a(6),V=a(7),q=a(3);var W=Object(i.connect)(e=>({jobNames:e.JobNames.items,announcements:e.Announcements.items,isMobile:e.MobileState.isMobile}),e=>({getAnnouncements:(t,a,l)=>e({type:s.b.ANNOUNCEMENTS.GET_ANNOUNCEMENTS,pageIndex:t,pageSize:a,body:l})}))((function(e){n.a.useEffect(()=>{!function(e,t=5){Object(G.a)($.c,{adminID:null,hidden:null,createdDate:null,announcementTypeID:null},V.a.LIST+`?sortBy=a.viewNumber&sortType=desc&pageIndex=${e}&pageSize=${t}`,q.b,{pageIndex:e,pageSize:t},!1).then(e=>{a(e.data.items)}).catch(e=>{})}(0,3)},[]);const[t,a]=Object(l.useState)([]);let{isMobile:o}=e;return(n.a.createElement("div",{className:"announcements"},n.a.createElement("h5",null,"BÀI VIẾT CHO BẠN"),o?t.length>0?n.a.createElement(r.Carousel,{effect:"fade",style:{height:400},autoplay:!0},t.map((e,t)=>n.a.createElement("div",{key:t,style:{height:"auto"}},n.a.createElement("a",{key:t,href:`/chi-tiet-bai-viet/${window.btoa(e.id)}`},n.a.createElement(r.Card,{hoverable:!0,cover:n.a.createElement("div",{style:{height:"20vw",minHeight:200,overflow:"hidden"}},n.a.createElement(g.LazyLoadImage,{width:"100%",style:{minHeight:"100%",backgroundSize:"cover"},alt:e.title,src:e.imageUrl})),actions:[n.a.createElement("div",null,n.a.createElement(r.Icon,{type:"star",key:"edit"}),e.averageRating),n.a.createElement("div",null,n.a.createElement(r.Icon,{type:"eye",key:"edit"}),e.viewNumber),n.a.createElement("div",null,n.a.createElement(r.Icon,{type:"message",key:"msg"}),e.totalComments)]},n.a.createElement(B.a,{title:e.title,description:n.a.createElement(n.a.Fragment,null,Object(H.a)(e.previewContent,30),"Xem thêm > >")})))))):"":t.length>0?n.a.createElement(r.Row,null,t.map((e,t)=>n.a.createElement("a",{key:t,href:`/chi-tiet-bai-viet/${window.btoa(e.id)}`},n.a.createElement(r.Col,{key:t,span:8,style:{padding:10}},n.a.createElement(r.Card,{hoverable:!0,cover:n.a.createElement("div",{style:{height:200,overflow:"hidden"}},n.a.createElement("img",{width:"100%",style:{minHeight:"100%",objectFit:"cover"},alt:"example",src:e.imageUrl}))},n.a.createElement(B.a,{description:n.a.createElement("div",null,n.a.createElement("div",{className:"title_card",style:{fontWeight:600,color:"black",fontSize:"1.1em",marginBottom:"5px",textTransform:"uppercase"}},n.a.createElement(C.a,{name:e.title,title:e.title})),n.a.createElement("div",{className:"data_card",style:{color:"#3a3a3a"}},Object(H.a)(e.previewContent,50)," "),n.a.createElement("div",{style:{fontStyle:"italic",fontSize:"0.9em",marginTop:5,textDecoration:"underline",color:"rgb(99, 99, 99)"}},"Xem thêm>>"))})))))):""))})),Q=a.p+"11fbaab8d48c74fcf912ab0246c2b203.jpg",Y=a.p+"f361ad29bc5dd856b25a03c4d213de09.jpg";class K extends l.Component{render(){return n.a.createElement("div",{className:"home-job white"},n.a.createElement(r.Row,null,n.a.createElement("h5",{className:"not-color"},"TÌM VIỆC THEO NHÓM NGÀNH"),n.a.createElement(r.Col,{sm:24,md:12,lg:12,xl:12,xxl:12},n.a.createElement("a",{href:"/result?brids=2"},n.a.createElement("div",{className:"expert-content"},n.a.createElement(g.LazyLoadImage,{style:{width:"100%",height:"100%",marginBottom:"0.6vw"},src:Q,alt:"Công việc liên quan đến kinh doanh"}),n.a.createElement("div",{className:"job-expert"},n.a.createElement(r.Icon,{type:"pie-chart",style:{marginRight:5}}),"Nhóm ngành kinh doanh")))),n.a.createElement(r.Col,{sm:24,md:12,lg:12,xl:12,xxl:12},n.a.createElement("a",{href:"/result?brids=13"},n.a.createElement("div",{className:"expert-content"},n.a.createElement(g.LazyLoadImage,{style:{width:"100%",height:"100%"},src:Y,alt:"Công việc liên quan đến kĩ thuật"}),n.a.createElement("div",{className:"job-expert"},n.a.createElement(r.Icon,{type:"tool",style:{marginRight:5}}),"Nhóm ngành kĩ thuật"))))))}}var X=K,Z=a.p+"3c323d82f12568102f4f2439dbd02c3a.png",ee=a.p+"0fc3cca7dbbf708ca0e40840823c00d4.png",te=a.p+"0fdc713f3114846beb5399abd9e72438.png";const ae=["1. Giới thiệu về cổng thông tin","2. Góc nhìn từ Nhà tuyển dụng về Ứng viên chuyên nghiệp","3. Thế nào là hồ sơ (CV) chất thu hút Nhà tuyển dụng?"];class le extends l.Component{constructor(e){var t,a,l;super(e),l=(e,t,a)=>{this.props.history.push(`?vm=${e}&vl=${t}`);let{isMobile:l}=this.props.mobileState;this.setState({title:a}),l&&window.open(`https://www.youtube.com/embed/${t}?autoplay=1`,"_blank")},(a="showVideo")in(t=this)?Object.defineProperty(t,a,{value:l,enumerable:!0,configurable:!0,writable:!0}):t[a]=l,this.state={vm:!0,vl:null,title:ae[0]}}static getDerivedStateFromProps(e,t){if(e){let e=window.location.href;var a=new URL(e),l=a.searchParams.get("vm"),n=a.searchParams.get("vl");if(l&&"true"===l)return{vm:!0,vl:n}}return{vm:!1}}render(){let{mobileState:e}=this.props;return(n.a.createElement("div",{className:"top-job white"},e.isMobile?"":n.a.createElement(r.Modal,{visible:this.state.vm,width:"45vw",destroyOnClose:!0,onCancel:()=>this.props.history.push("?vm=false"),title:this.state.title},n.a.createElement("iframe",{title:this.state.title,height:"350vh",width:"100%",src:`https://www.youtube.com/embed/${this.state.vl}?autoplay=1`,allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"})),n.a.createElement(r.Row,null,n.a.createElement("h5",null,"CHỦ ĐỀ TIÊU BIỂU"),n.a.createElement(r.Col,{sm:24,md:8,lg:8,xl:8,xxl:8},n.a.createElement("div",{className:"expert-content"},n.a.createElement(I.h,{onClick:()=>this.showVideo(!0,"Zj8t2qyJ2n4",ae[0]),src:Z,alt:ae[1]}),n.a.createElement("div",{className:"video-ad-on"},ae[0]))),n.a.createElement(r.Col,{sm:24,md:8,lg:8,xl:8,xxl:8},n.a.createElement("div",{className:"expert-content"},n.a.createElement(I.h,{onClick:()=>this.showVideo(!0,"0c3LgKTNHKU",ae[1]),src:ee,alt:ae[1]}),n.a.createElement("div",{className:"video-ad-on"},n.a.createElement("p",null,ae[1])))),n.a.createElement(r.Col,{sm:24,md:8,lg:8,xl:8,xxl:8},n.a.createElement("div",{className:"expert-content"},n.a.createElement(I.h,{onClick:()=>this.showVideo(!0,"Sxl2g3DCs_s",ae[2]),src:te,alt:"Công việc liên quan đến kĩ thuật"}),n.a.createElement("div",{className:"video-ad-on"},n.a.createElement("p",null,ae[2])))))))}}var ne=le;a(89);function oe(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}class ie extends l.PureComponent{constructor(e){super(e),oe(this,"componentDidMount",async()=>{await this.props.getInDay(0)}),oe(this,"changePage",e=>{this.props.getInDay(e-1)}),this.state={list_job_top:[],pageIndex:0,pageSize:9,atk:"inday-job",loading:!0}}render(){let{indayJob:e,param:t,loading:a}=this.props;return e&&e.totalItems>0?n.a.createElement("div",{className:"home-job"},n.a.createElement(r.Row,{style:{display:0===e.totalItems?"none":""}},n.a.createElement("h5",{className:"h5index",style:{textAlign:"center"}},"VIỆC LÀM TRONG NGÀY"),e&&e.items?e.items.map((e,l)=>{let o=e.employerLogoUrl;return o||(o=x.a),n.a.createElement(r.Col,{xs:24,sm:12,md:12,lg:8,xl:8,xxl:6,key:l},a?n.a.createElement(r.Skeleton,{key:l,loading:!0,avatar:!0,paragraph:{rows:1}}):n.a.createElement("div",{key:l,className:"h-j-item"},n.a.createElement("div",{className:"img-job"},n.a.createElement(k.Link,{to:`/employer/${btoa(e.employerID)}`},n.a.createElement(g.LazyLoadImage,{src:o,alt:"employer logo"})),n.a.createElement(I.e,null,e.jobType)),n.a.createElement("div",{className:"job-content"},n.a.createElement("ul",null,n.a.createElement("li",{className:"j-d"},n.a.createElement(k.Link,{to:`/job-detail/${window.btoa(e.id)}${t}`,target:"_blank"},n.a.createElement("h6",{className:"l_c",style:{color:e.titleHighlight?"red":"black"}},n.a.createElement(C.a,{title:e.jobTitle,name:n.a.createElement(n.a.Fragment,null,n.a.createElement("span",{className:"top-badge ",style:{marginRight:5},children:"HOT"}),e.jobTitle),transform:"uppercase"})))),n.a.createElement("li",{className:"l_c"},n.a.createElement(k.Link,{to:`/employer/${window.btoa(e.employerID)}${t}`,target:"_blank",className:"name_employer"},n.a.createElement(C.a,{title:e.employerName,name:n.a.createElement(n.a.Fragment,null,n.a.createElement(r.Icon,{type:"shop",style:{marginRight:5}}),e.employerName),transform:"initial"}))),n.a.createElement("li",{className:"region"},n.a.createElement(r.Icon,{type:"environment",style:{marginRight:3}}),e.region&&e.region.name?e.region.name:null),n.a.createElement("li",{className:"region"},n.a.createElement("span",{className:"salary-label"},n.a.createElement(r.Icon,{type:"dollar",style:{marginRight:3}}),Object(j.a)(e.minSalary,e.minSalaryUnit,e.maxSalary,e.maxSalaryUnit)))))))}):null,n.a.createElement(r.Col,{span:24,style:{textAlign:"center"}},n.a.createElement(r.Pagination,{pageSize:e.pageSize,total:e.totalItems,style:{margin:"10px 0px"},onChange:this.changePage})))):null}}var re=Object(i.connect)(e=>({topJob:e.HotJobResult.data,indayJob:e.InDayResult.data,loading:e.InDayResult.loading,param:e.DetailEvent.param}),e=>({getHotJob:(t,a)=>e({type:s.b.HOT_JOB.GET_HOT_JOB,pageIndex:t,pageSize:a}),getInDay:(t,a)=>e({type:s.b.IN_DAY.GET_IN_DAY_JOB,pageIndex:t,pageSize:a})}))(ie);t.default=Object(i.connect)(e=>({isAuthen:e.AuthState.isAuthen,mobileState:e.MobileState}),e=>({}))((function(e){return n.a.createElement(o.a,{disableFooterData:!1},n.a.createElement(f,e),n.a.createElement("div",{className:"content"},n.a.createElement(re,null),n.a.createElement(X,null),n.a.createElement(O,null),n.a.createElement(z,null),n.a.createElement(D,e),n.a.createElement(ne,e),n.a.createElement(W,e)))}))},62:function(e,t,a){"use strict";a.d(t,"a",(function(){return n})),a.d(t,"b",(function(){return o}));const l=e=>e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."),n=(e,t,a,n)=>{let o="";return e&&(o+=l(e),t&&t!==n&&(o+="/"+t)),a&&(o&&(o+=" - "),o+=l(a),n&&(o+="/"+n)),o||(o="Thỏa thuận"),o},o=(e,t,a)=>n(e,null,t,a)},68:function(e,t,a){"use strict";a.d(t,"a",(function(){return o}));var l=a(4),n=a.n(l);function o(e){let t="";e.placement&&(t=e.placement);return n.a.createElement("div",{className:`config-tooltip ${t}`,style:{textTransform:e.transform?e.transform:""}},(e.placement,n.a.createElement(n.a.Fragment,null,n.a.createElement("div",{className:"tooltiptext"},e.title),e.name)))}},88:function(e,t,a){},89:function(e,t,a){}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,