(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{62:function(e,t,a){"use strict";a.d(t,"a",(function(){return n})),a.d(t,"b",(function(){return s}));const l=e=>e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"."),n=(e,t,a,n)=>{let s="";return e&&(s+=l(e),t&&t!==n&&(s+="/"+t)),a&&(s&&(s+=" - "),s+=l(a),n&&(s+="/"+n)),s||(s="Thỏa thuận"),s},s=(e,t,a)=>n(e,null,t,a)},67:function(e,t,a){"use strict";a.d(t,"a",(function(){return l}));const l=(e,t)=>null!==e?e:"logo"===t?"":"./../assets/image/countdown.jpg"},70:function(e,t,a){"use strict";a.d(t,"a",(function(){return l}));const l=["mon","tue","wed","thu","fri","sat","sun"]},74:function(e,t,a){},80:function(e,t,a){"use strict";a.r(t),a.d(t,"_checkGender",(function(){return A}));var l=a(4),n=a.n(l),s=a(39),i=a(19),r=a(6),o=a(5),c=a(9),m=a(3),d=a(2),h=a(43),u=a.n(h),g=a(64),p=a(67),E=a(61),b=a(60),y=a(0),f=a(41),v=a.n(f),w=a(70),x=(a(74),a(62));class _ extends l.PureComponent{render(){let{jobDetail:e}=this.props;return(n.a.createElement("div",{className:"job-detail"},n.a.createElement(s.Row,{className:"des-job",style:{backgroundColor:"white"}},n.a.createElement(s.Col,{xs:24,sm:24,md:24,lg:15,xl:15},n.a.createElement("div",{className:"description-job "},n.a.createElement("h6",null,"Mô tả công việc"),n.a.createElement("div",{style:{padding:10,whiteSpace:"pre-line",color:"#000"},dangerouslySetInnerHTML:{__html:e&&e.description}}))),n.a.createElement(s.Col,{xs:24,sm:24,md:24,lg:9,xl:9},n.a.createElement("div",{className:"short-info"},n.a.createElement("h6",null,"Thông tin sơ lược"),n.a.createElement("ul",{style:{marginBottom:"5px"}},n.a.createElement("li",{className:"d_j_t"},n.a.createElement(s.Icon,{type:"calendar",style:{color:"rgb(74, 74, 74)"}}),n.a.createElement(b.c,{value:"Ngày đăng: "}),n.a.createElement("label",{style:{fontSize:"0.95em",color:"#000"}}," ",e&&v()(e.createdDate).format("DD/MM/YYYY"))),n.a.createElement("li",{className:"d_j_t"},n.a.createElement(s.Icon,{type:"calendar",style:{color:"rgb(74, 74, 74)"}}),n.a.createElement(b.c,{value:"Ngày hết hạn: "}),n.a.createElement("label",{style:{fontSize:"0.95em",color:"#000"}}," ",e&&v()(e.expirationDate).format("DD/MM/YYYY"))))))),n.a.createElement(s.Row,null,n.a.createElement(s.Col,{xs:24,sm:24,md:24,lg:24,xl:24},n.a.createElement(s.Row,{className:"time-job "},n.a.createElement("h6",null,"Ca làm việc"),e.shifts&&e.shifts?e.shifts.map((e,t)=>n.a.createElement(s.Col,{key:t,xs:24,sm:24,md:12,lg:12,xl:12,xxl:12},n.a.createElement("div",{className:"time-content",style:{border:"1px solid rgb(119, 197, 255)",borderRadius:"3px"}},n.a.createElement("p",{style:{color:"black",fontSize:"1.1em",borderBottom:"1px solid rgb(119, 197, 255)",paddingBottom:5,paddingLeft:"15px",backgroundColor:"rgb(226, 242, 254)",margin:"0",paddingTop:5}},"Ca số ",t+1),n.a.createElement("p",null,n.a.createElement(s.Icon,{type:"clock-circle",style:{color:"#168ECD"}})," "+e.startTime+"-"+e.endTime),n.a.createElement("p",null,n.a.createElement(s.Icon,{type:"dollar",style:{color:"#168ECD"}}),Object(x.b)(e.minSalary,e.maxSalary,e.unit)),n.a.createElement("div",{className:"week-day"},w.a.map((t,a)=>{if(!0===e[t]){let e="T"+(a+2);return 6===a&&(e="CN"),n.a.createElement("label",{key:a,className:"time-span"},e)}{let e="T"+(a+2);return 6===a&&(e="CN"),n.a.createElement("label",{key:a,className:"time-span-unselected"},e)}})),e.genderRequireds[0]?A(e.genderRequireds[0]):null,e.genderRequireds[1]?A(e.genderRequireds[1]):null))):n.a.createElement(b.g,{msg:"Ca làm việc không tồn tại"})))),n.a.createElement(s.Row,null,n.a.createElement(s.Col,{xs:24,sm:24,md:24,lg:24,xl:24},n.a.createElement("div",{className:"skills-job-detail "},n.a.createElement("h6",null,"Kĩ năng khác"),n.a.createElement("div",{style:{padding:15}},e.requiredSkills&&e.requiredSkills.length>0?e.requiredSkills.map((e,t)=>n.a.createElement("label",{key:t,className:"skills-detail"},e.name)):n.a.createElement(b.g,{msg:"Ứng viên không đòi hỏi kỹ năng khác"})))))))}}var N=a(8),k=a(11),S=a(13),C=a.n(S),D=a(66),j=a(12),I=a.n(j),T=a(40);function R(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}const{TabPane:q}=s.Tabs,{TextArea:L}=s.Input,A=e=>{if(e.gender)switch(e.gender){case"BOTH":return n.a.createElement("div",null,n.a.createElement("p",null,n.a.createElement("label",{style:{marginBottom:0,marginRight:3}},n.a.createElement(s.Icon,{type:"man",style:{color:"rgb(21, 148, 255)"}}),"Nam"," "),n.a.createElement("label",{style:{marginBottom:0,marginRight:5}},n.a.createElement(s.Icon,{type:"woman",style:{color:"#ff395c"}}),"Nữ"," ")),n.a.createElement("p",null,"Số lượt đã ứng tuyển: ",e.applied,"/",e.quantity));case"MALE":return n.a.createElement("div",null,n.a.createElement("p",null,n.a.createElement("label",{style:{marginBottom:0}},n.a.createElement(s.Icon,{type:"man",style:{color:"#168ECD"}}))," ","Nam -",n.a.createElement("label",{style:{marginLeft:5,marginBottom:0}},"Số lượt đã ứng tuyển: ",e.applied,"/",e.quantity)));case"FEMALE":return n.a.createElement("div",null,n.a.createElement("p",null,n.a.createElement("label",{style:{marginBottom:0}},n.a.createElement(s.Icon,{type:"woman",style:{color:"#ff395c"}}))," ","Nữ -",n.a.createElement("label",{style:{marginLeft:5,marginBottom:0}},"Số lượt đã ứng tuyển: ",e.applied,"/",e.quantity)));default:return n.a.createElement(b.g,null)}};class O extends l.Component{constructor(e){super(e),R(this,"show_btn",!1),R(this,"l_e",[]),R(this,"l_s",[]),R(this,"_loadData",()=>{let{jobDetail:e}=this.props;this.props.getJobDetail(window.atob(this.props.match.params.id),window.location.search),this.setState({isSaved:e.isSaved})}),R(this,"_handleOk",()=>{this.setState({visible:!0})}),R(this,"_handleCancel",()=>{this.setState({visible:!1})}),R(this,"_handleMessage",e=>{this.setState({message:e.target.value})}),R(this,"_handleCheckbox",(e,t)=>{let{shiftIDs:a}=this.state;!0===e.target.checked?a.push(t):u.a.remove(a,e=>e===t),this.setState({shiftIDs:a})}),R(this,"_toLogin",()=>{let{isAuthen:e}=this.props;localStorage.setItem("last_access",window.location.pathname);let t=window.location.pathname+window.location.search;!0!==e&&window.location.assign(`/login?path=${window.btoa(t)}`)}),R(this,"_createRequest",()=>{let{message:e,shiftIDs:t}=this.state,a=window.atob(this.props.match.params.id);this.requestToServer({message:e,shiftIDs:t},a),this.setState({visible:!1})}),this.state={is_loading:!0,visible:!1,confirmLoading:!1,message:"",genderRequired:[],shiftIDs:[],list_shiftIDs:[],check_box_state:[],jobState:"PENDING",is_loading_more:!1,isSaved:!0,jobID:null,employerID:null,can_send:!1}}async componentDidMount(){let e=C.a.parse(window.location.search),{isAuthen:t}=this.props;"1"===e.changeHost&&(t?(this.setState({visible:!0}),this.props.history.replace(`${window.location.pathname}?data=${e.data}`)):Object(D.a)("login")),this.setState({is_loading:!1}),await this._loadData(),this._loadState(),Object(g.a)(0,0)}async _loadState(){let{isAuthen:e,jobDetail:t}=this.props;e&&this.setState({jobState:t.appliedState})}async _saveJob(){let{isAuthen:e,jobDetail:t}=this.props;if(e){let e=await Object(r.a)(o.c,null,c.k+`/${t.id}/saved`,m.c,d.a);e&&null===e.data&&this.setState({isSaved:!0}),this.props.getJobDetail(window.atob(this.props.match.params.id),window.location.search)}}async requestToServer(e,t){await Object(r.a)(o.c,e,c.b+`/${t}/apply`,m.c,d.a,null,!1).then(e=>{if(e){let{results:a}=e.data;if(!0===e.data.success)I()({buttons:{catch:{text:"Lịch sử ứng tuyển",value:"catch"}},title:"Worksvns thông báo",text:"Ứng tuyển thành công!\n            Hồ sơ của bạn đã được gửi đến nhà tuyển dụng",icon:k.a.SUCCESS,dangerMode:!1}).then(e=>{switch(e){case"catch":window.open("/history-apply")}}),this.props.getJobDetail(t,window.location.search),this._loadState();else for(let e in a)!0===a[e].full?I()({title:"Worksvns thông báo",text:"Số người ứng tuyển đã đầy",icon:k.a.ERROR,dangerMode:!0}):!1===a[e].genderSuitable&&I()({title:"Worksvns thông báo",text:"Khác giới tính yêu cầu",icon:k.a.ERROR,dangerMode:!0})}})}componentWillUnmount(){}render(){let{jobDetail:e,isAuthen:t,param:a}=this.props,{is_loading:l,visible:i,confirmLoading:r,jobState:o,shiftIDs:c}=this.state;if(l)return n.a.createElement(E.a,null,n.a.createElement("div",{className:"loading"},n.a.createElement(s.Icon,{type:"loading-3-quarters",spin:!0})));let m="Ứng tuyển",d=e.applyState;!1===t?m="Ứng tuyển":"PENDING"===o?(m="Đang chờ",d=!0):"ACCEPTED"===o&&(m="Đã chấp nhận",d=!0);let h=e.employerCoverUrl,u=e.employerLogoUrl;return n.a.createElement(n.a.Fragment,null,n.a.createElement(s.Modal,{title:"Thông tin ứng tuyển",visible:i,onOk:this._handleOk,footer:[n.a.createElement(s.Button,{key:"cancel",onClick:this._handleCancel,type:"danger"},"Huỷ"),n.a.createElement(s.Button,{key:"ok",disabled:0===c.length,type:"primary",onClick:t?this._createRequest:this._toLogin},m)],confirmLoading:r,onCancel:this._handleCancel},n.a.createElement("div",{className:"body-requirement"},t?n.a.createElement("div",{className:"content-requirement"},n.a.createElement(L,{className:"body-requirement__text",placeholder:"Viết tin nhắn đến nhà tuyển dụng trong đơn ứng tuyển(nếu muốn)",onChange:e=>this._handleMessage(e),rows:4,maxLength:160}),n.a.createElement("div",{className:"chose-shift-rq"},e.shifts&&e.shifts.map((e,t)=>n.a.createElement("p",{key:t,className:"require__p",style:{margin:"10px 0px"}},n.a.createElement(s.Checkbox,{id:e.id,onChange:e=>{this._handleCheckbox(e,e.target.id)}},"Ca số ",t+1)))),n.a.createElement("div",{style:{fontStyle:"italic"}},n.a.createElement("span",{className:"asterisk"},"*")," Hồ sơ của bạn sẽ được gửi đến Nhà tuyển dụng! ",n.a.createElement("a",{href:"/profile",target:"_blank"},"Hoàn thiện hồ sơ"))):n.a.createElement("div",null,n.a.createElement("p",null,"Bạn cần đăng nhập trước khi đăng tuyển")))),n.a.createElement(E.a,null,n.a.createElement("div",{className:"content"},n.a.createElement(s.Row,null,n.a.createElement(s.Col,{xs:0,sm:0,md:0,lg:1,xl:2,xxl:3}),n.a.createElement(s.Col,{xs:24,sm:24,md:24,lg:22,xl:20,xxl:18},n.a.createElement("div",{id:"requirement-job",className:"job-detail-content"},n.a.createElement("div",{className:"btn-candidate show-mobile"},n.a.createElement(s.Button,{onClick:()=>{this.setState({visible:!0})}},n.a.createElement("i",{className:"fa fa-paper-plane-o","aria-hidden":"true"}))),n.a.createElement("div",{className:"cover-image-job "},n.a.createElement(T.LazyLoadImage,{alt:e.employerName,src:Object(p.a)(h),className:"company-image"})),n.a.createElement(s.Affix,{offsetTop:0},n.a.createElement("div",{className:"job-header"},n.a.createElement("div",{className:"company-header"},n.a.createElement(s.Row,null,n.a.createElement(s.Col,{xs:4,sm:8,md:4,lg:3,xl:4,className:"a_c"},n.a.createElement(s.Avatar,{size:70,shape:"square",src:Object(p.a)(u,"logo"),alt:"logo-company"}),n.a.createElement(b.e,null,e&&e.jobType)),n.a.createElement(s.Col,{xs:20,sm:12,md:16,lg:17,xl:14},n.a.createElement("h4",null,e&&e.jobTitle),n.a.createElement("div",{className:"d_j_t"},n.a.createElement(s.Icon,{type:"home",style:{color:"#168ECD"}}),n.a.createElement(N.Link,{to:`/employer/${window.btoa(e.employerID)}${a}`,target:"_blank",style:{fontSize:"1.05em",fontWeight:450}},e&&e.employerName)),n.a.createElement("div",{className:"d_j_t"},n.a.createElement(s.Icon,{type:"environment-o",style:{color:"#168ECD"}}),n.a.createElement("span",null,e&&e.address))),n.a.createElement(s.Col,{xs:24,sm:24,md:4,lg:4,xl:4},n.a.createElement(s.Row,{className:"btn-s-c"},n.a.createElement(s.Col,{xs:4,sm:4,md:4,lg:0,xl:0,className:"a_c"}),n.a.createElement(s.Col,{xs:12,sm:12,md:24,lg:24,xl:24,style:{marginTop:30}},n.a.createElement(s.Button,{type:d?"ghost":"default",size:"large",style:{padding:"5px 0px",backgroundColor:d?"":"#31a3f9",borderColor:d?"":"white",color:d?"":"white"},onClick:()=>{t?this.setState({visible:!0}):this._toLogin()},disabled:d,children:m,block:!0})))))))),n.a.createElement("div",{className:"job-content "},n.a.createElement(s.Tabs,{defaultActiveKey:"1",className:""},n.a.createElement(q,{tab:"Chi tiết công việc",key:"1"},n.a.createElement(_,{jobDetail:e})))))),n.a.createElement(s.Col,{xs:0,sm:0,md:0,lg:1,xl:2,xxl:3})))))}}t.default=Object(i.connect)(e=>({jobDetail:e.GetEventJobDetail,employerDetail:e.EmployerDetail,isAuthen:e.AuthState.isAuthen,param:e.DetailEvent.param}),e=>({getJobDetail:(t,a)=>e({type:y.b.EVENT.JOB.DETAIL,jobID:t,eventAndSchoolID:a}),getEmployerDetail:t=>e({type:y.b.EMPLOYER_DETAIL.GET_EMPLOYER_DETAIL,id:t})}))(O)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,